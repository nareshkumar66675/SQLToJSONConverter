<?xml version="1.0" encoding="utf-8" ?>
<TransformationConfig>
  <!-- Auth Components -->
   <Transformation Name="SITE">
    <Source>
      select st.SITE_NUMBER as Id,
      st.SITE_NUMBER as Number,
      st.SITE_short_NAME as Name,
      st.SITE_LONG_NAME as [Description],
      st.SITE_short_NAME as VenueCode,
      st.SITE_CODE as Code,
      --'Rot' as ParentCode,
	  coalesce(PROP_PARENT_CODE,PROP_SHORT_NAME) as ParentCode,
      p.PROP_SHORT_NAME as ServiceProviderCode,
      --st.SITE_TIMEZONE_ID as Timezone,
      'AUS Eastern Standard Time' as Timezone,
      sttype.site_type_short_name as SiteType,
      ''  as LicensedMonitoringOperator,
      ''  as Licensee,
      0 as ApprovedMachineCount,
      CAST(0 as varchar(50)) as GamingLicenseNumber,
      --123456 as FaxNumber,
      --123456 as MobileNumber ,
      cast(1 as bit) as IsActive,
      cast(0 as bit) as IsDeleted,
      --2 as DepthLevel,
	   coalesce(PROP_DEPTH_LEVEL, 2) as DepthLevel,
      '' as ContactInformation_Address,
      '' as ContactInformation_City,
      '' as ContactInformation_State,
      --'' as ContactInformation_Country,
      '' as ContactInformation_PostalCode,
      '' as ContactInformation_MailId,
      '' as ContactInformation_PhoneNumber,
      '' as ContactInformation_Fax,
      '' as ContactInformation_MobileNumber ,
      0 as DataRowVersion,
      0 as UMDataRowVersion,
      null as CreatedAt,
      null as UpdatedAt,
      substring(sy.SYS_SHORT_NAME,0,4) as Products_ProductCode,
      im.INS_SYSTEM_IP_ADDRESS as Products_Ip ,
      CAST(im.INS_SERVICE_PORT as VARCHAR(50)) as Products_Port
      from gam.SITE as st
      join gam.SITE_TYPE as stType on st.SITE_TYPE_ID = stType.SITE_TYPE_ID
      join gam.INSTALLED_SYSTEM_MAP  as iMap on iMap.INSM_SITE_ID = st.site_id
      join gam.INSTALLED_SYSTEM as im on im.INS_SYS_ID = iMap.INSM_SYS_ID
      join gam.[SYSTEM] as sy on sy.SYS_ID = im.SYS_ID
      join gam.PROPERTY as p on p.PROP_ID = st.SITE_PROP_ID
      where iMap.INSM_IS_SITE_GROUP = 0 and INS_SYSTEM_IP_ADDRESS NOT IN ('0.0.0.0')
      order by st.site_number
    </Source>
    <Destination>[Site].[Site]</Destination>
    <KeyFormat Format="151_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="TASK">
    <!--<Source>
      SELECT DISTINCT
      tc.FUNC_ID as Id,
      tc.FUNC_NAME Name,
      tc.FUNC_DESCRIPTION as [Description],
      tp.MODL_ID as Module_Id,
      tp.MODL_NAME as Module_Name
      FROM [COMMON].[USER_FUNCTION] tc
      LEFT JOIN [COMMON].[MODULE] tp ON tc.MODULE_ID = tp.MODL_ID where FUNC_ID>0
    </Source>-->
    <Source>
      SELECT DISTINCT
      tc.FUNC_ID as 1,
      tc.FUNC_NAME 2,
      tc.FUNC_DESCRIPTION as 3,
      tp.MODL_ID as Module_Id,
      tp.MODL_NAME as Module_Name
      FROM [COMMON].[USER_FUNCTION] tc
      LEFT JOIN [COMMON].[MODULE] tp ON tc.MODULE_ID = tp.MODL_ID where FUNC_ID>0
    </Source>
    <Destination>[Employee].[Task]</Destination>
    <KeyFormat Format="53_{0}" Keys="Id"  />
    <ColumnMapping>
      <ColumnMap Key="1" ColumnName="Id"/>
      <ColumnMap Key="2" ColumnName="2"/>
      <ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="EMPLOYEE">
    <Source>
      select (ROW_NUMBER() over (ORDER BY Actr_Id) )+1 as  Id,
      ACTR_FIRST_NAME as FirstName,
      ACTR_MIDDLE_NAME as MiddleName,
      ACTR_LAST_NAME as LastName,
      --actr_active_dir_user as UserMatrixId,
	    cast(0 as varchar(50)) as UserMatrixId,
      ACTR_LOGIN as LoginName,
      --ACTR_USER_ID as SDSLogin,
	  cast(10000 as varchar(50)) as SDSLogin,
      ACTR_IS_DELETED  as IsActive,
      ACTR_AUTO_SIGN_OFF as IsAutoSigOffEnabled,
      ACTR_EMAIL_ID as Email,
      null as Access,
      null as LevelType,
      null as OrgLevel,
      0 as UMVersion from common.user_actor
	  WHERE ACTR_ID NOT IN( 1)
	  ORDER BY ACTR_ID
    </Source>
    <Destination>[Employee].[User]</Destination>
    <KeyFormat Format="52_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="ROLE">
    <Source>
      SELECT
      ROLE_NEW_ID AS Id,
      ROLE_NAME AS Name,
      ROLE_CODE AS Code,
      ROLE_DESCRIPTION AS [Description],
      fnGrp.FUNCGRP_NEW_ID as TaskGroups_$
      FROM [COMMON].[USER_ROLE] as rl
      left join [COMMON].[USER_ROLE_FUNCTION_GROUP] as fnRlMap on fnRlMap.ROLE_ID = rl.ROLE_ID
      left join [COMMON].[USER_FUNCTION_GROUP] as fnGrp on fnGrp.funcgrp_id = fnRlMap.[FUNCGRP_ID]
      WHERE ROLE_IS_DELETED = 0 AND rl.ROLE_ID NOT IN (1)
    </Source>
    <Destination>[Employee].[Role]</Destination>
    <KeyFormat Format="50_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="ORG">
    <Source>
      select CAST(RIGHT(CAST(PROP_ID AS VARCHAR(50)),5) AS BIGINT)  as Id,
      PROP_SHORT_NAME as Code,
	  --coalesce(PROP_PARENT_CODE,PROP_SHORT_NAME) as ParentCode,
	  'Rot' as ParentCode,
      PROP_LONG_NAME as Name,
      PROP_LONG_NAME as [Description],
      CONVERT(bit,'false') as IsRoot,
	  coalesce(PROP_DEPTH_LEVEL, 2) as DepthLevel,
	  0 as UMDataRowVersion,
	  0 as DataRowVersion
      from GAM.PROPERTY
      WHERE IS_DELETED = 0 and PROP_ID not in (1,550001000000000001)
    </Source>
    <Destination>Organization.Organization</Destination>
    <KeyFormat Format="100_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="TSKGRP">
    <Source>
      SELECT ROW_NUMBER() OVER (ORDER BY FUNCGRP_ID )+1 as Id,
      FUNCGRP_NAME as Code,
      FUNCGRP_NAME as Name,
      FUNCGRP_DESCRIPTION as [Description]
      FROM
      [COMMON].[USER_FUNCTION_GROUP] WHERE FUNCGRP_ID not in (1)
      ORDER BY FUNCGRP_ID
    </Source>
    <Destination>[Employee].[TaskGroup]</Destination>
    <KeyFormat Format="51_{0}" Keys="Id"  />
  </Transformation>
  
  <!-- Asset Components-->
 
  <Transformation Name="COMPDATA_MODEL_TYPE">
    <Source>
      ----------- MODEL TYPE----------
      SELECT 122003 as Id,
      22003 as cc_1,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      'MODEL.TYPE' as cc_Code,
      --Component Values---
      '1_root' as cc_Components_ComponentValues_Id,
      'Model Type' as cc_Components_ComponentValues_Name,
      'Model Type' as cc_Components_ComponentValues_DisplayName,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50)) as cc_Components_ComponentValues_ChildComponents_Id,
      Name as cc_Components_ComponentValues_ChildComponents_Name,
      DisplayName AS cc_Components_ComponentValues_ChildComponents_DisplayName,
      ----- OPTIONS ------
      ROW_NUMBER() OVER (PARTITION BY MDLTYP_ID ORDER BY MDLTYP_ID ) AS cc_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MDLTYP_SHORT_NAME' then 'Model Type Short Name'
      WHEN VALUE_DESC = 'MDLTYP_LONG_NAME' then 'Model Type Long Name'
      END AS cc_Components_ComponentValues_ChildComponents_Options_Name,
      VALUE as cc_Components_ComponentValues_ChildComponents_Options_Value
      FROM
      (SELECT MDLTYP_ID,
      MDLTYP_SHORT_NAME as Name,
      MDLTYP_LONG_NAME as DisplayName,
      ROW_NUMBER() OVER (ORDER BY MDLTYP_ID ) AS Components_Id,
      CAST(MDLTYP_SHORT_NAME AS NVARCHAR) AS MDLTYP_SHORT_NAME,
      CAST(MDLTYP_LONG_NAME AS NVARCHAR) AS MDLTYP_LONG_NAME
      FROM GAM.MODEL_TYPE  WHERE IS_DELETED = 0 ) MDL_TYPE
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MDLTYP_SHORT_NAME, MDLTYP_LONG_NAME)
      ) AS T
      -------- EOF MODEL TYPE ----------
    </Source>
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="1" ColumnName="Id"/>
      <ColumnMap Key="cc" ColumnName="Component"/>
      <!--<ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>-->
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_MODEL">
    <Source>
      ----------- MODEL ---------------
      SELECT 122006 as Id,
      22006 as Component_Id,
      --COMPONENTS---
      0 as Component_Components_SiteId,
	   'MODEL.RELATION' as Component_Code,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Model' as Component_Components_ComponentValues_Name,
      'MODEL.RELATION' as Component_Components_ComponentValues_DisplayName,
	  'MODEL.RELATION' as Component_Components_ComponentValues_Code,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50)) as Component_Components_ComponentValues_ChildComponents_Id,
      Name as Component_Components_ComponentValues_ChildComponents_Name,
      Name AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      --------OPTIONS-----
      ROW_NUMBER() OVER (PARTITION BY MDL_ID ORDER BY MDL_ID ) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MODL_SHORT_NAME' then 'Model Short Name'
      WHEN VALUE_DESC = 'MODL_LONG_NAME' then 'Model Long Name'
      WHEN VALUE_DESC = 'MODL_TYPE_SHORT_NAME' then 'Model Type Short Name'
      WHEN VALUE_DESC = 'MODL_TYPE_LONG_NAME' then 'Model Type Long Name'
      WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'Manufacturer Short Name'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'Manufacturer Long Name'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'Manufacturer Code Name'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Name,
	  CASE  WHEN VALUE_DESC = 'MODL_SHORT_NAME' then 'MODEL.SHORT.NAME'
      WHEN VALUE_DESC = 'MODL_LONG_NAME' then 'MODEL.LONG.NAME'
      WHEN VALUE_DESC = 'MODL_TYPE_SHORT_NAME' then 'MODEL.TYPE.SHORT.NAME'
      WHEN VALUE_DESC = 'MODL_TYPE_LONG_NAME' then 'MODEL.TYPE.LONG.NAME'
      WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'MANF.SHORT.NAME'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'MANF.LONG.NAME'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'MANUF.CODE'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Code,
      VALUE as Component_Components_ComponentValues_ChildComponents_Options_Value
      FROM ( SELECT MDL.MDL_ID, MDL_SHORT_NAME as Name,
      ROW_NUMBER() OVER (ORDER BY MDL.MDL_ID ) AS Components_Id,
      CAST(MDL.MDL_SHORT_NAME AS NVARCHAR) AS MODL_SHORT_NAME,
      CAST(MDL.MDL_LONG_NAME AS NVARCHAR)  AS MODL_LONG_NAME,
      CAST(MDLTYPE.MDLTYP_SHORT_NAME AS NVARCHAR)  AS MODL_TYPE_SHORT_NAME,
      CAST(MDLTYPE.MDLTYP_LONG_NAME AS NVARCHAR)  AS MODL_TYPE_LONG_NAME,
      CAST(MNF.MANF_SHORT_NAME AS NVARCHAR)  AS MANF_SHORT_NAME,
      CAST(MNF.MANF_LONG_NAME AS NVARCHAR)  AS MANF_LONG_NAME,
      CAST(MNF.MANF_VEND_CODE AS NVARCHAR)  AS MANF_VEND_CODE
      FROM GAM.MODEL_MODELTYPE_MAP AS MAP
      JOIN GAM.MODEL AS MDL ON MDL.MDL_ID = MAP.MODL_ID
      JOIN GAM.MODEL_TYPE AS MDLTYPE ON MDLTYPE.MDLTYP_ID = MAP.MTYP_ID
      JOIN GAM.MANUFACTURER AS MNF ON MNF.MANF_ID = MDL.MDL_MANF_ID
      WHERE MDL.IS_DELETED = 0 ) MDL_TYPE
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MODL_SHORT_NAME, MODL_LONG_NAME,
      MODL_TYPE_SHORT_NAME, MODL_TYPE_LONG_NAME,
      MANF_SHORT_NAME, MANF_LONG_NAME, MANF_VEND_CODE)
      ) AS T

      -------- EOF MODEL ----------
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="COMPDATA_THEME">
    <Source>
      select '122061' as Id,
      '22061' as Component_Id,
      'THEME.RELATION' as Component_Code,
      '0'as Component_Components_SiteId,
      '1_root' as Component_Components_ComponentValues_Id,
      'Theme' as Component_Components_ComponentValues_Name,
      'Theme'  as Component_Components_ComponentValues_DisplayName,
      'THEME.RELATION' as Component_Components_ComponentValues_Code,
      ---Theme Type ----
      '1_22507'as Component_Components_ComponentValues_CC_Id,
      'Unknown Theme Type'as Component_Components_ComponentValues_CC_Name,
      'THEME.TYPE' Component_Components_ComponentValues_CC_Code,
      'Unknown Theme Type' as Component_Components_ComponentValues_CC_DisplayName,
      ---Theme Options ----
      '0' Component_Components_ComponentValues_CC_Options_Id,
      'type short name' as Component_Components_ComponentValues_CC_Options_Value,
      'THEME.TYPE.SHORT.NAME' as Component_Components_ComponentValues_CC_Options_Code,
      ---Theme Group ----
      '1_22058' as Component_Components_ComponentValues_CC_CC_Id,
      'Unknown Theme Group' as Component_Components_ComponentValues_CC_CC_Name,
      'THEME.GROUP' as Component_Components_ComponentValues_CC_CC_Code,
      ---Theme Options ----
      '0' as Component_Components_ComponentValues_CC_CC_Options_Id,
      'Group short name' as Component_Components_ComponentValues_CC_CC_Options_Value,
      'THEME.GROUP.SHORT.NAME' as Component_Components_ComponentValues_CC_CC_Options_Code,
      --- theme Category ---
      '1_22059' as Component_Components_ComponentValues_CC_CC_CC_Id,
      'Unknown Theme Category' as Component_Components_ComponentValues_CC_CC_CC_Name,
      'THEME.CATEGORY' as Component_Components_ComponentValues_CC_CC_CC_Code,
      ---- Theme Category Options ----
      '0' as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
      'Category Long' as Component_Components_ComponentValues_CC_CC_CC_Options_Value,
      'THEME.CATEGORY.LONG.NAME' as Component_Components_ComponentValues_CC_CC_CC_Options_Code,
      --- Manfacturer ----
      '1_22002' as Component_Components_ComponentValues_CC_CC_CC_CC_Id,
      'BALLY' as Component_Components_ComponentValues_CC_CC_CC_CC_Name,
      'MANUFACTURER' as Component_Components_ComponentValues_CC_CC_CC_CC_Code,
      --- MAnufacturer Options
      '0' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Id,
      'B' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Value,
      'MANUF.CODE' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Code,
      --- theme ---
      '1_22060' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Id,
      'Unknown Theme' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Name,
      'THEME' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Code,
      --- Theme Options ------
      '0' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Id,
      'Unknown Theme' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Value,
      'THEME.NAME' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Code

      Union All

      select '122061' as Id,
      '22061' as Component_Id,
      'THEME.RELATION' as Component_Code,
      '0'as Component_Components_SiteId,
      '1_root' as Component_Components_ComponentValues_Id,
      'Theme' as Component_Components_ComponentValues_Name,
      'Theme'  as Component_Components_ComponentValues_DisplayName,
      'THEME.RELATION' as Component_Components_ComponentValues_Code,
      '1_22507'as Component_Components_ComponentValues_CC_Id,
      'Unknown Theme Type'as Component_Components_ComponentValues_CC_Name,
      'THEME.TYPE' Component_Components_ComponentValues_CC_Code,
      'Unknown Theme Type' as Component_Components_ComponentValues_CC_DisplayName,
      '1' Component_Components_ComponentValues_CC_Options_Id,
      'type long name' as Component_Components_ComponentValues_CC_Options_Value,
      'THEME.TYPE.LONG.NAM' as Component_Components_ComponentValues_CC_Options_Code,
      '1_22058' as Component_Components_ComponentValues_CC_CC_Id,
      'Unknown Theme Group' as Component_Components_ComponentValues_CC_CC_Name,
      'THEME.GROUP' as Component_Components_ComponentValues_CC_CC_Code,
      '1' as Component_Components_ComponentValues_CC_CC_Options_Id,
      'Group Long name' as Component_Components_ComponentValues_CC_CC_Options_Value,
      'THEME.GROUP.SHORT.NAME' as Component_Components_ComponentValues_CC_CC_Options_Code,
      '1_22059' as Component_Components_ComponentValues_CC_CC_CC_Id,
      'Unknown Theme Category' as Component_Components_ComponentValues_CC_CC_CC_Name,
      'THEME.CATEGORY' as Component_Components_ComponentValues_CC_CC_CC_Code,
      '1' as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
      'Category short name' as Component_Components_ComponentValues_CC_CC_CC_Options_Value,
      'THEME.CATEGORY.SHORT.NAME' as Component_Components_ComponentValues_CC_CC_CC_Options_Code,
      '1_22002' as Component_Components_ComponentValues_CC_CC_CC_CC_Id,
      'BALLY' as Component_Components_ComponentValues_CC_CC_CC_CC_Name,
      'MANUFACTURER' as Component_Components_ComponentValues_CC_CC_CC_CC_Code,
      '1' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Id,
      'BALLY' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Value,
      'MANF.LONG.NAME' as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Code,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Id,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Name,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Code,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Id,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Value,
      null as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Code
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="CC" ColumnName="ChildComponents"/>
      <!--<ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>-->
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_DENOM">
    <Source>
      ----------- Denoms ---------------
      SELECT  122011 as Id,
      22011 as Component_Id,
      --COMPONENTS---
      0 as Component_Components_SiteId,
	   'DENOMINATION' as Component_Code,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Denomination' as Component_Components_ComponentValues_Name,
      'Denomination' as Component_Components_ComponentValues_DisplayName,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50)) as Component_Components_ComponentValues_ChildComponents_Id,
      DENM_AMOUNT as Component_Components_ComponentValues_ChildComponents_Name,
      DENM_AMOUNT AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      ---- OPTIONS --------
      ROW_NUMBER() OVER (PARTITION BY DENM_ID ORDER BY DENM_ID ) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CODE AS Component_Components_ComponentValues_ChildComponents_Options_Name,
      DENM_AMOUNT as Component_Components_ComponentValues_ChildComponents_Options_Value
      from ( SELECT DENM_ID,
      ROW_NUMBER() OVER (ORDER BY DENM_ID ) AS Components_Id,
      'Denom Value' as CODE,
      cast ( CONVERT(DECIMAL(10,2),cast(denm_amount as float)/100) as nvarchar) as DENM_AMOUNT
      from gam.denomination where IS_DELETED = 0 ) as den

      -------- EOF Denoms -----------
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="1" ColumnName="fd"/>
      <ColumnMap Key="2" ColumnName="df"/>
      <ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_MNF">
    <Source>
     SELECT 122002 as Id,
      22002 as Component_Id,	
	  'MANUFACTURER' as Component_Code,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Manufacturer' as Component_Components_ComponentValues_Name,
      'Manufacturer' as Component_Components_ComponentValues_DisplayName,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50)) +'_1' as Component_Components_ComponentValues_ChildComponents_Id,
	  'MANUFACTURER' as  Component_Components_ComponentValues_ChildComponents_Code,
      Name as Component_Components_ComponentValues_ChildComponents_Name,
      DisplayName AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      ----- OPTIONS ------
     cast( ROW_NUMBER() OVER (PARTITION BY MANF_ID ORDER BY MANF_ID ) as nvarchar) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'Manufacture Short Name'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'Manufacture Long Name'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'Code'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Name,
	
	  CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'MANF.SHORT.NAME'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'MANF.LONG.NAME'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'MANUF.CODE'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Code,

      VALUE as Component_Components_ComponentValues_ChildComponents_Options_Value
      FROM
      (SELECT MANF_ID,MANF_SHORT_NAME as Name, MANF_LONG_NAME as DisplayName,
      ROW_NUMBER() OVER (ORDER BY MANF_ID ) AS Components_Id,
      CAST(MANF_SHORT_NAME AS NVARCHAR) AS MANF_SHORT_NAME,
      CAST(MANF_LONG_NAME AS NVARCHAR) AS MANF_LONG_NAME,
      CAST(MANF_VEND_CODE AS NVARCHAR) AS MANF_VEND_CODE
      FROM GAM.MANUFACTURER  WHERE IS_DELETED = 0 AND MANF_IS_VENDOR = 0) MFN
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MANF_SHORT_NAME, MANF_LONG_NAME, MANF_VEND_CODE)
      ) AS T
      ------ EOF Manufacturer ------
     
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="AST_DEFN">
    <Source>
      SELECT AST.ASST_ID as Id,
      CONVERT(varchar(100),ASTDFN_OPTN_ORDER) as Sequences,
      CONVERT(bit,'true') as IsSystemDefined,
      --------Asset Type -----
      AST.ASST_ID as AssetType_Id,
      AST.ASST_NAME as AssetType_Name,
      Ast.ASST_DESCRIPTION as AssetType_Description,
      CONVERT(bit,'true') as AssetType_IsRevenueAffecting,
      CONVERT(bit,'false') as AssetType_IsInline,
      'Root' as AssetType_Scope,
      --------Options--------
      optn.OPTN_ID as Options_Id,
      optn.OPTN_NAME as Options_Name,
      optn.OPTN_CODE as Options_Code,
      optn.OPTN_DESCRIPTION as Options_Description,
      optn.OPTN_DEFAULT_VAL as Options_DefaultValue,
      optn.OPTN_MIN_VALUE as Options_MinLength,
      optn.OPTN_MAX_VALUE as Options_MaxLength,
      optn.OPTN_EDIT_ENABLED as Options_IsEditEnabled,
      optn.OPTN_ADD_ENABLED as Options_IsAddEnabled,
      optn.OPTN_MOVE_ENABLED as Options_IsMoveEnabled,
      optn.OPTN_MOVE_EDIT_ENABLED as Options_IsMoveEditEnabled,
      optn.OPTN_DELETE_ENABLED as Options_IsDeleteEnabled,
      --optn.OPTN_DELETE_ENABLED as Options_IsDeleteEnabled,
      CONVERT(bit,'true') as Options_IsSearchable
      FROM GAM.ASSET AS AST
      LEFT JOIN GAM.ASSET_DEFINITION AS AST_DFN ON AST.ASST_ID = AST_DFN.ASTDFN_ASST_ID
      LEFT JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID = AST_DFN.ASTDFN_OPTN_ID
      --LEFT JOIN GAM.OPTION_ENUMERATION AS ENUM ON OPTN.OPTN_ID=ENUM.OPTEN_OPTN_ID
      --WHERE AST.ASST_ID = 1
    </Source>
    <Destination>ASSET_DEF.ASSETS</Destination>
    <KeyFormat Format="53_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="AST">
    <Source>
      SELECT ASD_AM_UID as  Id,
      ---ASSET ID -----
      ASD.ASD_STD_ID as AssetId_Id,
      ASD_AM_UID as AssetId_AssetTypeDefinitionId,
      ----SITE----------
      SITE_NUMBER as Site_SiteId,
      SITE_LONG_NAME as Site_SiteName,
      SITE_NUMBER as Site_SiteNumber,
      st.IS_DELETED as Site_IsDeleted,
      0 as Site_OrganizationId, -- mapping needed
      pt.prop_long_name as Site_OrganizationName,
      ---- OPTIONS ----------
      case when ogrp_id = 1 then OPTN.OPTN_ID else null end as Options_Id,
      case when ogrp_id = 1 then OPTN.OPTN_CODE else null end as Options_Code,
      case when ogrp_id = 1 then AST_OPTN_VALUE else null end as Options_Value,
      -----Components --------
      case when ogrp_id > 1 then OPTN.OPTN_ID else null end as Components_ComponentId,
      case when ogrp_id > 1 then CAST(OPTN.OPTN_ID as varchar(50)) else null end as Components_ComponentInstanceId,
      case when ogrp_id > 1 then OPTN.OPTN_NAME else null end as Components_ComponentName,
      case when ogrp_id > 1 then OPTN.OPTN_NAME else null end as Components_ComponentKey,
      case when ogrp_id > 1 then
      ( case ogrp_id
      when 90023 then  mdl.mdl_long_name
      when 90011 then  ar.ar_long_name
      when 90012 then  zn.zn_long_name
      when 90013 then  bk.bk_long_name/*Bank*/
      when 90041 then  cast(contract_no as nvarchar)/*Contract*/
      when 90051 then  cast(mdt_number as nvarchar)/*Meter Delta*/
      when 90021 then  MANF_LONG_NAME
      when 90014 then  COL_LONG_NAME
      when 90023 then  MDLTYP_LONG_NAME end)  else null end as Components_ComponentValue,
      case when ogrp_id > 1 then OPTN.OPTN_CODE else null end as Components_ComponentCode,
      ----- Inline assets ------ Need to discuss

      ------Type Code -----
      0 as TypeCode_TypeCodeId, -- mapping needed
      TCODE.TYCOD_NAME as TypeCode_TypeCodeName
      FROM GAM.ASSET_STANDARD_DETAILS AS ASD
      JOIN GAM.ASSET AS AST ON AST.ASST_ID = ASD.ASD_ASST_ID
      JOIN GAM.INSTALLED_SYSTEM_MAP AS MAP ON MAP.INSM_ID = ASD.ASD_INSMAP_ID
      JOIN GAM.[SITE] AS ST ON ST.SITE_ID = MAP.INSM_SITE_ID
      JOIN GAM.PROPERTY AS pt ON pt.PROP_ID = ST.SITE_PROP_ID
      JOIN GAM.ASSET_DETAIL AS AD ON AD.ASD_STD_ID = ASD.ASD_STD_ID
      JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID = AD.AST_OPTION_ID
      LEFT JOIN GAM.VIEW_MANUFACTURER AS MNF ON MNF.MANF_ID = ASD.ASD_MANF_ID
      LEFT JOIN GAM.MODEL AS MDL ON MDL.MDL_ID = ASD.ASD_MODL_ID
      LEFT JOIN GAM.MODEL_MODELTYPE_MAP AS MDL_TYPE_MAP ON MDL_TYPE_MAP.[MODEL_MAP_ID] = ASD.ASD_MODL_TYP_MAPiD
      LEFT JOIN GAM.AREA AS AR ON AR.AREA_ID = ASD.ASD_AREA_ID
      LEFT JOIN GAM.ZONE AS ZN ON ZN.ZONE_ID = ASD.ASD_ZONE_ID
      LEFT JOIN GAM.BANK AS BK ON BK.BANK_ID = ASD.ASD_BANK_ID
      LEFT JOIN GAM.METER_DELTA AS MTR_DELTA ON MTR_DELTA.MDT_ID = ASD.ASD_MTR_DLTA_ID
      LEFT JOIN [GAM].[TYPE_CODE_MASTER] AS TCODE ON TCODE.TYCOD_ID = ASD.ASD_TCOD_ID
      LEFT JOIN [GAM].[CONTRACT_DETAILS] AS CNTRCT ON CNTRCT.CONTRACT_ID = ASD.ASD_CNTR_ID
      LEFT JOIN [GAM].[COLLECTION] AS COL ON COL.[COLLECTION_ID] = ASD.ASD_COLLECTION_ID
      LEFT JOIN [GAM].MODEL_TYPE AS MTYP ON COL.[COLLECTION_ID] = ASD.ASD_COLLECTION_ID
      WHERE ASD.IS_DELETED = 0 AND ASD_CLST_STAT_ID = 5
      AND AST.ASST_ID not in( 1,14,7)
      AND SITE_NUMBER in ({0})
    </Source>
    <Destination>[DataManagement].[Asset]</Destination>
    <KeyFormat Format="59_{0}_{1}" Keys="AssetId.AssetTypeDefinitionId,Id"  />
  </Transformation>
</TransformationConfig>