<?xml version="1.0" encoding="utf-8" ?>
<TransformationConfig>
  <!-- Auth Components -->
  <Transformation Name="SITE">
    <Source>
      select st.SITE_NUMBER as Id,
      st.SITE_NUMBER as Number,
      st.SITE_short_NAME as Name,
      st.SITE_LONG_NAME as [Description],
      st.SITE_short_NAME as VenueCode,
      MST.SITE_CODE as Code, 
      --'Rot' as ParentCode,
      coalesce(PROP_PARENT_CODE,P.PROP_SHORT_NAME) as ParentCode,
      p.PROP_SHORT_NAME as ServiceProviderCode,
      st.SITE_TIMEZONE_ID as Timezone,
      sttype.site_type_short_name as SiteType,
      ''  as LicensedMonitoringOperator,
      ''  as Licensee,
      0 as ApprovedMachineCount,
      CAST(0 as varchar(50)) as GamingLicenseNumber,
      --123456 as FaxNumber,
      --123456 as MobileNumber ,
      cast(1 as bit) as IsActive,
      cast(0 as bit) as IsDeleted,
      --2 as DepthLevel,
      coalesce(PROP_DEPTH_LEVEL, 2) as DepthLevel,
      '' as ContactInformation_Address,
      '' as ContactInformation_City,
      '' as ContactInformation_State,
      --'' as ContactInformation_Country,
      '' as ContactInformation_PostalCode,
      '' as ContactInformation_MailId,
      '' as ContactInformation_PhoneNumber,
      '' as ContactInformation_Fax,
      '' as ContactInformation_MobileNumber ,
      0 as DataRowVersion,
      0 as UMDataRowVersion,
      null as CreatedAt,
      null as UpdatedAt,
      substring(sy.SYS_SHORT_NAME,0,4) as Products_ProductCode,
      im.INS_SYSTEM_IP_ADDRESS as Products_Ip ,
      CAST(im.INS_SERVICE_PORT as VARCHAR(50)) as Products_Port
      from gam.SITE as st
      LEFT JOIN MIGRATION.GAM_SITE AS MST ON MST.SITE_LEGCY_ID = ST.SITE_ID
      join gam.SITE_TYPE as stType on st.SITE_TYPE_ID = stType.SITE_TYPE_ID
      join gam.INSTALLED_SYSTEM_MAP  as iMap on iMap.INSM_SITE_ID = st.site_id
      join gam.INSTALLED_SYSTEM as im on im.INS_SYS_ID = iMap.INSM_SYS_ID
      join gam.[SYSTEM] as sy on sy.SYS_ID = im.SYS_ID
      join gam.PROPERTY as p on p.PROP_ID = st.SITE_PROP_ID
      LEFT JOIN MIGRATION.GAM_PROPERTY AS MP ON MP.PROP_LEGCY_ID = P.PROP_ID
      where iMap.INSM_IS_SITE_GROUP = 0 and INS_SYSTEM_IP_ADDRESS NOT IN ('0.0.0.0')
      order by st.site_number
    </Source>
    <Destination>[Site].[Site]</Destination>
    <KeyFormat Format="151_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="TASK">
    <Source>
      SELECT DISTINCT
      tc.FUNC_ID as 1,
      tc.FUNC_NAME 2,
      tc.FUNC_DESCRIPTION as 3,
      tp.MODL_ID as Module_Id,
      tp.MODL_NAME as Module_Name
      FROM [COMMON].[USER_FUNCTION] tc
      LEFT JOIN [COMMON].[MODULE] tp ON tc.MODULE_ID = tp.MODL_ID where FUNC_ID>0
    </Source>
    <Destination>[Employee].[Task]</Destination>
    <KeyFormat Format="53_{0}" Keys="Id"  />
    <ColumnMapping>
      <ColumnMap Key="1" ColumnName="Id"/>
      <ColumnMap Key="2" ColumnName="2"/>
      <ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="EMPLOYEE">
    <Source>
      select (ROW_NUMBER() over (ORDER BY Actr_Id) )+1 as  Id,
      ACTR_FIRST_NAME as FirstName,
      ACTR_MIDDLE_NAME as MiddleName,
      ACTR_LAST_NAME as LastName,
      --actr_active_dir_user as UserMatrixId,
	    cast(0 as varchar(50)) as UserMatrixId,
      ACTR_LOGIN as LoginName,
      --ACTR_USER_ID as SDSLogin,
	  cast(10000 as varchar(50)) as SDSLogin,
      ACTR_IS_DELETED  as IsActive,
      ACTR_AUTO_SIGN_OFF as IsAutoSigOffEnabled,
      ACTR_EMAIL_ID as Email,
      null as Access,
      null as LevelType,
      null as OrgLevel,
      0 as UMVersion from common.user_actor
	  WHERE ACTR_ID NOT IN( 1)
	  ORDER BY ACTR_ID
    </Source>
    <Destination>[Employee].[User]</Destination>
    <KeyFormat Format="52_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="ROLE">
    <Source>
      SELECT
      CAST(mrRle.ROLE_NEW_ID as int) AS Id,
      ROLE_NAME AS Name,
      ROLE_CODE AS Code,
      ROLE_DESCRIPTION AS [Description],
	    0 as DataRowVersion,
      CAST(MG.FUNCGRP_NEW_ID as int) as TaskGroups_$
      FROM [COMMON].[USER_ROLE] as rl
      left join MIGRATION.COMMON_USER_ROLE as mrRle on mrRle.ROLE_ID = rl.ROLE_ID
      left join [COMMON].[USER_ROLE_FUNCTION_GROUP] as fnRlMap on fnRlMap.ROLE_ID = rl.ROLE_ID
      left join [COMMON].[USER_FUNCTION_GROUP] as fnGrp on fnGrp.funcgrp_id = fnRlMap.[FUNCGRP_ID]
      JOIN MIGRATION.COMMON_USER_FUNCTION_GROUP AS MG ON MG.FUNCGRP_ID = fnGrp.FUNCGRP_ID
      WHERE ROLE_IS_DELETED = 0 AND rl.ROLE_ID NOT IN (1)
      order by mrRle.ROLE_NEW_ID
    </Source>
    <Destination>[Employee].[Role]</Destination>
    <KeyFormat Format="50_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="ORG">
    <Source>
      SELECT PROP_NEW_ID  as Id,
      MGP.PROP_SHORT_NAME as Code,
      --coalesce(PROP_PARENT_CODE,PROP_SHORT_NAME) as ParentCode,
      'Rot' as ParentCode,
      GP.PROP_LONG_NAME as Name,
      PROP_LONG_NAME as [Description],
      CONVERT(bit,'false') as IsRoot,
      coalesce(PROP_DEPTH_LEVEL, 2) as DepthLevel,
      0 as UMDataRowVersion,
      0 as DataRowVersion
      FROM GAM.PROPERTY AS GP
      LEFT JOIN MIGRATION.GAM_PROPERTY AS MGP ON MGP.PROP_LEGCY_ID = GP.PROP_ID
      WHERE IS_DELETED = 0 and PROP_ID not in (1,550001000000000001)
    </Source>
    <Destination>Organization.Organization</Destination>
    <KeyFormat Format="100_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="TSKGRP">
    <Source>
      SELECT
      MG.FUNCGRP_NEW_ID as Id,
      FUNCGRP_NAME as Code,
      FUNCGRP_NAME as Name,
      FUNCGRP_DESCRIPTION as [Description],
	    0 as DataRowVersion,
	    99 as Sites_$
      FROM [COMMON].[USER_FUNCTION_GROUP] AS FG
      JOIN MIGRATION.COMMON_USER_FUNCTION_GROUP AS MG ON MG.FUNCGRP_ID = FG.FUNCGRP_ID
      WHERE FG.FUNCGRP_ID NOT IN (1)
      ORDER BY MG.FUNCGRP_NEW_ID
    </Source>
    <Destination>[Employee].[TaskGroup]</Destination>
    <KeyFormat Format="51_{0}" Keys="Id"  />
  </Transformation>
  
  <!-- Asset Components-->
 
  <Transformation Name="COMPDATA_MODEL_TYPE">
    <Source>
      ----------- MODEL TYPE----------
      SELECT 22003 as Id,
	    0 as DataRowVersion,
      22003 as cc_1,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      'MODEL.TYPE' as cc_Code,
      --Component Values---
      '1_root' as cc_Components_ComponentValues_Id,
      'Model Type' as cc_Components_ComponentValues_Name,
      'Model Type' as cc_Components_ComponentValues_DisplayName,
      'MODEL.TYPE' as cc_Components_ComponentValues_Code,
      --ChildCompoenents----
      CAST(MDLTYPE_NEW_ID as VARCHAR(50))+'_1' as cc_Components_ComponentValues_ChildComponents_Id,
      Name as cc_Components_ComponentValues_ChildComponents_Name,
      DisplayName AS cc_Components_ComponentValues_ChildComponents_DisplayName,
      'MODEL.TYPE' AS cc_Components_ComponentValues_ChildComponents_Code,
      ----- OPTIONS ------
      ROW_NUMBER() OVER (PARTITION BY MDLTYP_ID ORDER BY MDLTYP_ID desc ) AS cc_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MDLTYP_SHORT_NAME' then 'Model Type Short Name'
      WHEN VALUE_DESC = 'MDLTYP_LONG_NAME' then 'Model Type Long Name'
      END AS cc_Components_ComponentValues_ChildComponents_Options_Name,
      CASE  WHEN VALUE_DESC = 'MDLTYP_SHORT_NAME' then 'MODEL.TYPE.SHORT.NAME'
      WHEN VALUE_DESC = 'MDLTYP_LONG_NAME' then 'MODEL.TYPE.LONG.NAME'
      END AS cc_Components_ComponentValues_ChildComponents_Options_Code,
      VALUE as cc_Components_ComponentValues_ChildComponents_Options_Value
      FROM
      (SELECT MDLTYP_ID, MDLTYPE_NEW_ID,
      MDLTYP_SHORT_NAME as Name,
      MDLTYP_LONG_NAME as DisplayName,
      ROW_NUMBER() OVER (ORDER BY MDLTYP_ID ) AS Components_Id,
      CAST(MDLTYP_SHORT_NAME AS NVARCHAR) AS MDLTYP_SHORT_NAME,
      CAST(MDLTYP_LONG_NAME AS NVARCHAR) AS MDLTYP_LONG_NAME
      FROM GAM.MODEL_TYPE AS BASE_MT
      JOIN MIGRATION.GAM_MODEL_TYPE AS MG_MT ON BASE_MT.MDLTYP_ID = MG_MT.MDLTYPE_LEGCY_ID
      WHERE BASE_MT.IS_DELETED = 0 ) MDL_TYPE
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MDLTYP_SHORT_NAME, MDLTYP_LONG_NAME)
      ) AS T
      -------- EOF MODEL TYPE ----------
    </Source>
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="1" ColumnName="Id"/>
      <ColumnMap Key="cc" ColumnName="Component"/>
      <!--<ColumnMap Key="3" ColumnName="fv"/>
      <ColumnMap Key="4" ColumnName="fdv"/>-->
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_MODEL">
    <Source>
      ----------- MODEL ---------------
      Select 22006 as Id,
	    0 as DataRowVersion,
      22006 as Component_Id,
      'MODEL.RELATION' as Component_Code,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Model' as Component_Components_ComponentValues_Name,
      'MODEL.RELATION' as Component_Components_ComponentValues_DisplayName,
      'MODEL.RELATION' as Component_Components_ComponentValues_Code,
      ---Manufacture ----
      --cast(ROW_NUMBER() OVER (Partition by MF.mf_id ORDER BY MF.mf_id ) as varchar(50))  + '_'+
      CAST ( (MF.MF_ID)  AS NVARCHAR) + '_'+
      MF.COMP_TYPE_ID as Component_Components_ComponentValues_CC_Id,
      MF.DISPLAY_NAME as Component_Components_ComponentValues_CC_Name,
      'MANUFACTURER' as Component_Components_ComponentValues_CC_Code,
      MF.value as Component_Components_ComponentValues_CC_DisplayName,
      ---Manufacture Type Options ----
      MF.MNF_CODE_SEQ as Component_Components_ComponentValues_CC_Options_Id,
      MF.MNF_NAME as Component_Components_ComponentValues_CC_Options_Name,
      mf.value as Component_Components_ComponentValues_CC_Options_Value,
      mf.MNF_CODE  as Component_Components_ComponentValues_CC_Options_Code,
      ---Model Type ----
      CAST ( MF.MF_ID  AS NVARCHAR) + '_'+
      MT.COMP_TYPE_ID as Component_Components_ComponentValues_CC_CC_Id,
      MT.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_Name,
      'MODEL.TYPE' as Component_Components_ComponentValues_CC_CC_Code,
      ---Model Type  Options ----
      mt.MDL_TYP_SEQ as Component_Components_ComponentValues_CC_CC_Options_Id,
      mt.VALUE as Component_Components_ComponentValues_CC_CC_Options_Value,
      mt.MDL_TYP_CODE as Component_Components_ComponentValues_CC_CC_Options_Code,
      mt.MDL_TYP_NAME as Component_Components_ComponentValues_CC_CC_Options_Name,
      ---Model Type ----
      CAST ( MF.MF_ID  AS NVARCHAR) + '_'+
      MD.COMP_TYPE_ID as Component_Components_ComponentValues_CC_CC_CC_Id,
      MD.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_Name,
      'MODEL' as Component_Components_ComponentValues_CC_CC_CC_Code,
      ---Model Options ----
      md.MDL_SEQ as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
      MD.VALUE as Component_Components_ComponentValues_CC_CC_CC_Options_Value,
      MD.MDL_CODE as Component_Components_ComponentValues_CC_CC_CC_Options_Code,
      MD.MDL_Name as Component_Components_ComponentValues_CC_CC_CC_Options_Name

      FROM [Migration].[VIEW_MODEL] AS MD
      join [Migration].[VIEW_MANUFACTURE] as mf on mf.manf_id = MD.MDL_MANF_ID and mf.mnf_seq = MD.MDL_SEQ
      JOIN [GAM].[MODEL_MODELTYPE_MAP] AS mdlMap ON mdlMap.MODL_ID = MD.MDL_ID
      join [Migration].[VIEW_MODEL_TYPE] as MT on MT.MDLTYP_ID = mdlMap.MTYP_ID and md.MDL_SEQ = MDL_TYP_SEQ
      --where md.MDL_ID in (1,2)
      order by mf.mf_id
      -------- EOF MODEL ----------
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="CC" ColumnName="ChildComponents"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_THEME">
    <Source>
      SELECT
	  '22061' as Id,
	  0 as DataRowVersion,
      '22061' as Component_Id,
      'THEME.RELATION' as Component_Code,
      '0'as Component_Components_SiteId,
      '1_root' as Component_Components_ComponentValues_Id,
      'Theme' as Component_Components_ComponentValues_Name,
      'Theme'  as Component_Components_ComponentValues_DisplayName,
      'THEME.RELATION' as Component_Components_ComponentValues_Code,
      
      ---- Theme Type -----
      CAST ( ThemeType_ID  AS NVARCHAR) + '_'+
      TT.COMP_TYPE_ID as Component_Components_ComponentValues_CC_Id,
      TT.DISPLAY_NAME as Component_Components_ComponentValues_CC_Name,
      'THEME.TYPE' as Component_Components_ComponentValues_CC_Code,
      TT.DISPLAY_NAME as Component_Components_ComponentValues_CC_DisplayName,

      ---Theme Type Options ----
      tt.THEM_TYPE_SEQ as Component_Components_ComponentValues_CC_Options_Id,
      tt.value as Component_Components_ComponentValues_CC_Options_Value,
      tt.them_type_name  as Component_Components_ComponentValues_CC_Options_Code,

      ---Theme Group ----
      --ROW_NUMBER() OVER (ORDER BY TG.DISPLAY_NAME) AS TG_RW_NM,
      CAST ( ThemeGroup_Id  AS NVARCHAR) + '_'+
      TG.COMP_TYPE_ID as Component_Components_ComponentValues_CC_CC_Id,
      TG.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_Name,
      'THEME.GROUP' as Component_Components_ComponentValues_CC_CC_Code,
      tg.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_DisplayName,

      ---Theme Options ----
      tg.THM_GRP_SEQ as Component_Components_ComponentValues_CC_CC_Options_Id,
      tg.VALUE as Component_Components_ComponentValues_CC_CC_Options_Value,
      tg.THM_GRP_CODE as Component_Components_ComponentValues_CC_CC_Options_Code,

      --- Theme Category ---
      --ROW_NUMBER() OVER (ORDER BY TC.TCAT_CODE) AS TC_RW_NM,
      CAST ( ThemeCategory_Id  AS NVARCHAR) + '_'+
      tc.COMP_TYPE_ID as Component_Components_ComponentValues_CC_CC_CC_Id,
      TC.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_Name,
      'THEME.CATEGORY' as Component_Components_ComponentValues_CC_CC_CC_Code,
      TC.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_DisplayName,

      ---- Theme Category Options ----
      tc.TCAT_SEQ as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
      tc.VALUE as Component_Components_ComponentValues_CC_CC_CC_Options_Value,
      tc.TCAT_CODE Component_Components_ComponentValues_CC_CC_CC_Options_Code,

      --- Manfacturer ----
      --ROW_NUMBER() OVER (PARTITION BY mf.DISPLAY_NAME ORDER BY mf.DISPLAY_NAME) AS MF_RW_NM,
      CAST ( Manfacture_Id  AS NVARCHAR) + '_'+
      mf.COMP_TYPE_ID as Component_Components_ComponentValues_CC_CC_CC_CC_Id,
      MF.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_CC_Name,
      'MANUFACTURER' as Component_Components_ComponentValues_CC_CC_CC_CC_Code,
      MF.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_CC_DisplayName,

      --- Manufacturer Options
      MF.MNF_CODE_SEQ as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Id,
      mf.VALUE as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Value,
      mf.MNF_CODE as  Component_Components_ComponentValues_CC_CC_CC_CC_Options_Code,
     --- theme ---
      --ROW_NUMBER() OVER (ORDER BY TM.DISPLAY_NAME) AS TM_RW_NM,
      CAST ( Theme_Id  AS NVARCHAR) + '_'+
      TM.COMP_TYPE_ID as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Id,
      TM.DISPLAY_NAME as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Name,
      'THEME' as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Code,
      TM.DISPLAY_NAME as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_DisplayName,
      --- Theme Options ------
      TM.THEM_CODE_SEQ as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Id,
      TM.VALUE as  Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Value,
      TM.THEM_CODE as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Code
	  FROM [Migration].[VIEW_THEME_TYPE] AS TT 
	  JOIN [Migration].[VIEW_THEME_GROUP] AS TG ON TG.TGRP_TTYP_ID = TT.TTYP_ID  AND TG.THM_GRP_SEQ = TT.THEM_TYPE_SEQ 
	  JOIN [Migration].[VIEW_THEME_CATEGORY] AS TC ON TC.TCAT_TGRP_ID = TG.TGRP_ID AND TG.THM_GRP_SEQ = TC.TCAT_SEQ
	  JOIN [Migration].[VIEW_THEME] AS TM on TM.THEME_CAT_ID = TC.TCAT_ID AND TM.THEM_SEQ = TC.TCAT_SEQ
	  JOIN [Migration].[VIEW_MANUFACTURE] AS MF ON MF.MANF_ID = TM.MANF_ID AND MNF_SEQ = TM.THEM_SEQ
	  LEFT JOIN MIGRATION.GAM_THEME_DETAILS AS GTD 
	  on gtd.them_id = tm.them_id and gtd.manf_id = MF.MANF_ID and gtd.TCAT_ID = TM.THEME_CAT_ID 
	  and gtd.TGRP_ID = tg.TGRP_ID and gtd.TTYP_ID = TT.TTYP_ID 
	  ORDER BY THEMETYPE_ID, THEMEGROUP_ID, THEMECATEGORY_ID, MANFACTURE_ID, THEME_ID
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="CC" ColumnName="ChildComponents"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_DENOM">
    <Source>
      ----------- Denoms ---------------
      SELECT  22011 as Id,
      22011 as Component_Id,
	    0 as DataRowVersion,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      'DENOMINATION' as Component_Code,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Denomination' as Component_Components_ComponentValues_Name,
      'DENOMINATION' as Component_Components_ComponentValues_DisplayName,
      'DENOMINATION' as Component_Components_ComponentValues_Code,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50))+'_1' as Component_Components_ComponentValues_ChildComponents_Id,
      DENM_AMOUNT as Component_Components_ComponentValues_ChildComponents_Name,
      DENM_AMOUNT AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      'DENOMINATION' AS Component_Components_ComponentValues_ChildComponents_Code,
      ---- OPTIONS --------
      ROW_NUMBER() OVER (PARTITION BY DENM_ID ORDER BY DENM_ID ) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CODE AS Component_Components_ComponentValues_ChildComponents_Options_Name,
      DENM_AMOUNT as Component_Components_ComponentValues_ChildComponents_Options_Value,
      'DENOM.AMOUNT' as Component_Components_ComponentValues_ChildComponents_Options_Code
      from [MIGRATION].[GAM_DENOMINATION] as den
		order by DENM_AMOUNT_Cents
      -------- EOF Denoms -----------
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="COMPDATA_MNF">
    <Source>
      SELECT 22002 as Id,
	    0 as DataRowVersion,
      22002 as Component_Id,
      'MANUFACTURER' as Component_Code,
      --COMPONENTS---
      0 as Component_Components_SiteId,
      --Component Values---
      '1_root' as Component_Components_ComponentValues_Id,
      'Manufacturer' as Component_Components_ComponentValues_Name,
      'Manufacturer' as Component_Components_ComponentValues_DisplayName,
      'Manufacturer' as Component_Components_ComponentValues_Code,
      --ChildCompoenents----
      CAST(Components_Id as VARCHAR(50)) +'_1' as Component_Components_ComponentValues_ChildComponents_Id,
      'MANUFACTURER' as  Component_Components_ComponentValues_ChildComponents_Code,
      Name as Component_Components_ComponentValues_ChildComponents_Name,
      DisplayName AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      ----- OPTIONS ------
      cast( ROW_NUMBER() OVER (PARTITION BY MANF_ID ORDER BY MANF_ID ) as nvarchar) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'Manufacture Short Name'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'Manufacture Long Name'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'Code'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Name,

      CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'MANF.SHORT.NAME'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'MANF.LONG.NAME'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'MANUF.CODE'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Code,

      VALUE as Component_Components_ComponentValues_ChildComponents_Options_Value
      FROM
      (SELECT MANF_ID, MANF_SHORT_NAME as Name, MANF_LONG_NAME as DisplayName,
      ROW_NUMBER() OVER (ORDER BY MF_NEW_ID ) AS Components_Id,
      CAST(MANF_SHORT_NAME AS NVARCHAR) AS MANF_SHORT_NAME,
      CAST(MANF_LONG_NAME AS NVARCHAR) AS MANF_LONG_NAME,
      CAST(MANF_VEND_CODE AS NVARCHAR) AS MANF_VEND_CODE
      FROM GAM.MANUFACTURER
      JOIN MIGRATION.GAM_MANUFACTURER ON MNF_LEGCY_ID = MANF_ID
      WHERE IS_DELETED = 0 AND MANF_IS_VENDOR = 0) MFN
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MANF_SHORT_NAME, MANF_LONG_NAME, MANF_VEND_CODE)
      ) AS T
      ------ EOF Manufacturer ------

    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="COMPDATA_POS_VENDOR">
    <Source>
      SELECT 22051 as Id,
	    0 as DataRowVersion,
      22051 as Component_Id,
      'POS.VENDOR' as Component_Code,
      --------COMPONENTS---------
      0 as Component_Components_SiteId,
      -------Component Values--------
      '1_root' as Component_Components_ComponentValues_Id,
      'POS Vendor' as Component_Components_ComponentValues_Name,
      'POS Vendor' as Component_Components_ComponentValues_DisplayName,
      'POS.VENDOR' as Component_Components_ComponentValues_Code,
      ------ChildCompoenents-------
      CAST(Components_Id as VARCHAR(50)) +'_1' as Component_Components_ComponentValues_ChildComponents_Id,
      'POS.VENDOR' as  Component_Components_ComponentValues_ChildComponents_Code,
      Name as Component_Components_ComponentValues_ChildComponents_Name,
      DisplayName AS Component_Components_ComponentValues_ChildComponents_DisplayName,
      ----- OPTIONS ----------
      cast( ROW_NUMBER() OVER (PARTITION BY MANF_ID ORDER BY MANF_ID ) as nvarchar) AS Component_Components_ComponentValues_ChildComponents_Options_Id,
      CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'Vendor Short Name'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'Vendor Long Name'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'Code'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Name,

      CASE  WHEN VALUE_DESC = 'MANF_SHORT_NAME' then 'VEND.SHORT.NAME'
      WHEN VALUE_DESC = 'MANF_LONG_NAME' then 'VEND.LONG.NAME'
      WHEN VALUE_DESC = 'MANF_VEND_CODE' then 'VEND.CODE'
      END AS Component_Components_ComponentValues_ChildComponents_Options_Code,

      VALUE as Component_Components_ComponentValues_ChildComponents_Options_Value
      FROM
      (SELECT MANF_ID, MANF_SHORT_NAME as Name, MANF_LONG_NAME as DisplayName,
      ROW_NUMBER() OVER (ORDER BY MF_NEW_ID ) AS Components_Id,
      CAST(MANF_SHORT_NAME AS NVARCHAR) AS MANF_SHORT_NAME,
      CAST(MANF_LONG_NAME AS NVARCHAR) AS MANF_LONG_NAME,
      CAST(MANF_VEND_CODE AS NVARCHAR) AS MANF_VEND_CODE
      FROM GAM.MANUFACTURER
      JOIN MIGRATION.GAM_POS_MANUFACTURER ON MNF_LEGCY_ID = MANF_ID
      WHERE IS_DELETED = 0) MFN
      UNPIVOT
      ( VALUE FOR VALUE_DESC IN (MANF_SHORT_NAME, MANF_LONG_NAME, MANF_VEND_CODE)
      ) AS T
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="COMPDATA_POS_MODEL">
    <Source>
      SELECT '22052' as Id,
	    0 as DataRowVersion,
      22052 as Component_Id,
      'POS.MODEL' as Component_Code,
      -------Components--------
      0 as Component_Components_SiteId,
      ------ComponentValues------
      '1_root' as Component_Components_ComponentValues_Id,
      'POS Model' as Component_Components_ComponentValues_Name,
      'POS.MODEL' as Component_Components_ComponentValues_Code,
      'POS Model' as Component_Components_ComponentValues_DisplayName,
      -------ChildComponents-------
      cast(Components_Id as nvarchar)+'_1' as Component_Components_ComponentValues_ChildComponents_Id,
      Name as Component_Components_ComponentValues_ChildComponents_Name,
      'POS.MODEL' as Component_Components_ComponentValues_ChildComponents_Code,
      DISPLAY_NAME as Component_Components_ComponentValues_ChildComponents_DisplayName,
      -------Options---------
      '1' as Component_Components_ComponentValues_ChildComponents_Options_Id,
      'POS.MODEL.NAME' as Component_Components_ComponentValues_ChildComponents_Options_Code,
      MODL_LONG_NAME as Component_Components_ComponentValues_ChildComponents_Options_Value
      FROM (SELECT MDL.MDL_ID, MDL_MANF_ID,
      MDL_NEW_ID,
      MDL_SHORT_NAME as Name,
      MDL_LONG_NAME as DISPLAY_NAME,
      MDL_NEW_ID AS Components_Id,
      CAST(MDL.MDL_LONG_NAME AS NVARCHAR)  AS MODL_LONG_NAME
      FROM  GAM.MODEL AS MDL
      JOIN MIGRATION.GAM_POS_MODEL AS GD ON GD.MDL_LEGCY_ID = MDL.MDL_ID
      WHERE MDL.IS_DELETED = 0 ) MDL_TYPE
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
  </Transformation>
  <Transformation Name="COMPDATA_AZB">
    <Source>
    SELECT 
    '22010' as Id,
	  0 as DataRowVersion,
    ---- Component ----
    '22010' as Component_Id,
    'AZB' as Component_Code,
    ---- Components----
    SITE_NUMBER as Component_Components_SiteId,

    ---- ComponentValues ----
    --SITE_NUMBER as Component_Components_SiteId,
    ---- ComponentValues ----
    '1_root' as Component_Components_ComponentValues_Id,
    'Area Zone Bank' as Component_Components_ComponentValues_Name,
    'Area Zone Bank' as Component_Components_ComponentValues_DisplayName,
    'AZB' as Component_Components_ComponentValues_Code,
    --- Area ChildComponents ---
    cast(AR_Indx as nvarchar) + '_22007' as Component_Components_ComponentValues_CC_Id,
    AR.DISPLAY_NAME as Component_Components_ComponentValues_CC_Name,
    AR.DISPLAY_NAME as Component_Components_ComponentValues_CC_DisplayName,
    'AREA' as Component_Components_ComponentValues_CC_Code,

    --- Area Options---
    AREA_SEQ as Component_Components_ComponentValues_CC_Options_Id,
    AREA_NAME as Component_Components_ComponentValues_CC_Options_Name,
    AREA_CODE as Component_Components_ComponentValues_CC_Options_Code,
    VALUE_AR as Component_Components_ComponentValues_CC_Options_Value,

    --- Zone ChildComponents ---
    cast(ZN_Indx as nvarchar) + '_22008' as Component_Components_ComponentValues_CC_CC_Id,
    ZN.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_Name,
    ZN.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_DisplayName,
    'ZONE' as Component_Components_ComponentValues_CC_CC_Code,

    --- Zone Options---
    ZONE_SEQ as Component_Components_ComponentValues_CC_CC_Options_Id,
    ZONE_NAME as Component_Components_ComponentValues_CC_CC_Options_Name,
    ZONE_CODE as Component_Components_ComponentValues_CC_CC_Options_Code,
    VALUE_ZN as Component_Components_ComponentValues_CC_CC_Options_Value,

    --- Bank ChildComponents ---
    cast(BK_Indx as nvarchar) +'_22009' as Component_Components_ComponentValues_CC_CC_CC_Id,
    BK.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_Name,
    BK.DISPLAY_NAME as Component_Components_ComponentValues_CC_CC_CC_DisplayName,
    'BANK' as Component_Components_ComponentValues_CC_CC_CC_Code,

    --- Bank Options---
    BANK_SEQ as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
    BANK_NAME as Component_Components_ComponentValues_CC_CC_CC_Options_Name,
    BANK_CODE as Component_Components_ComponentValues_CC_CC_CC_Options_Code,
    VALUE_BK as Component_Components_ComponentValues_CC_CC_CC_Options_Value

    --SELECT
    FROM MIGRATION.VIEW_AREA AS AR
    JOIN MIGRATION.VIEW_ZONE AS ZN ON ZN_AREA_ID = AREA_ID AND AREA_SEQ = ZONE_SEQ
    JOIN MIGRATION.VIEW_BANK AS BK ON BK_ZONE_ID = ZONE_ID AND ZONE_SEQ = BANK_SEQ
    JOIN GAM.[SITE] ON SITE_ID = AR_SITE_ID
    WHERE 1=1 and site_number in ( 301, 302, 401, 404, 501, 502, 201, 202, 801, 802, 683, 601)
	--ARea_ID = -1256000001181
    order by SITE_ID, AR.AREA_ID, ZN.ZONE_ID, BK.BANK_ID
    </Source>   
    <Destination>[COMPONENTS].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id" />
    <ColumnMapping>
      <ColumnMap Key="CC" ColumnName="ChildComponents"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="COMPDATA_TYPE_DESC">
    <Source>
	  SELECT 22069 as Id,
	  0 as DataRowVersion,
		--Component
		22069 as Component_Id,
		0 as Component_ScopeLevel,
		'TYPE DESCRIPTION RELATION' as Component_Code,
		--Components--
		0 as Component_Components_SiteId,
		--ComponentValues--
		'1_root' as Component_Components_ComponentValues_Id,
		'Type Description Relation' as Component_Components_ComponentValues_Name,
		'TYPE DESCRIPTION RELATION' as Component_Components_ComponentValues_Code,
		'Type Description Relation' as Component_Components_ComponentValues_DisplayName,

		----Type Description--
		cast(TypeDescription_Id as nvarchar) +
		'_22068' as Component_Components_ComponentValues_CC_Id,
		typ.TypeDescription as Component_Components_ComponentValues_CC_Name,
		'ASSET.TYPE.DESCRIPTION' as Component_Components_ComponentValues_CC_Code,
		typ.TypeDescription as Component_Components_ComponentValues_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_Options_Id,
		typ.TypeDescription as Component_Components_ComponentValues_CC_Options_Value,
		'ASSET.TYPE.DESCRIPTION.VALUE' as Component_Components_ComponentValues_CC_Options_Code,

		----Manufacturer----
		cast(Manufacturer_Id as nvarchar) +
		'_22002' as Component_Components_ComponentValues_CC_CC_Id,
		MNF.Display_Name as Component_Components_ComponentValues_CC_CC_Name,
		'MANUFACTURER' as Component_Components_ComponentValues_CC_CC_Code,
		mnf.Display_Name as Component_Components_ComponentValues_CC_CC_DisplayName,
		----Options---
		mnf_code_seq as Component_Components_ComponentValues_CC_CC_Options_Id,
		mnf.value as Component_Components_ComponentValues_CC_CC_Options_Value,
		mnf.mnf_code as Component_Components_ComponentValues_CC_CC_Options_Code,

		----Model Type----
		cast(ModelType_Id as nvarchar) +
		'_22003' as Component_Components_ComponentValues_CC_CC_CC_Id,
		MDLTYPE.Display_Name as Component_Components_ComponentValues_CC_CC_CC_Name,
		'MODEL.TYPE' as Component_Components_ComponentValues_CC_CC_CC_Code,
		MDLTYPE.Display_Name as Component_Components_ComponentValues_CC_CC_CC_DisplayName,
		----Options---
		MDL_TYP_SEQ as Component_Components_ComponentValues_CC_CC_CC_Options_Id,
		MDLTYPE.VALUE as Component_Components_ComponentValues_CC_CC_CC_Options_Value,
		MDLTYPE.MDL_TYP_CODE as Components_ComponentValues_CC_CC_CC_Options_Code,

		----Model----
		cast(Model_Id as nvarchar) +
		'_22005' as Component_Components_ComponentValues_CC_CC_CC_CC_Id,
		MDL.Display_Name as Component_Components_ComponentValues_CC_CC_CC_CC_Name,
		'MODEL' as Component_Components_ComponentValues_CC_CC_CC_CC_Code,
		MDL.Display_Name as Component_Components_ComponentValues_CC_CC_CC_CC_DisplayName,
		----Options---
		MDL_seq as Component_Components_ComponentValues_CC_CC_CC_CC_Options_Id,
		MDL.VALUE as Component_Components_ComponentValues_CC_CC_CC_CC_Options_Value,
		MDL.MDL_CODE as Component_Components_ComponentValues_CC_CC_CC_CC_Options_Code,

		----Game Hold Percentage----
		cast(GameHoldPC_Id as nvarchar) +
		'_22064' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Id,
		case when GameHoldPC = '' then '1.00' else GameHoldPC end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Name,
		'ASSET.GAME.HOLD.PERCENT' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Code,
		case when GameHoldPC = '' then '1.00' else GameHoldPC end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Id,
		case when GameHoldPC = '' then '1.00' else GameHoldPC end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Value,
		'ASSET.GAME.HOLD.PERCENT.VALUE' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_Options_Code,

		----Hold Percentage----
		cast(HoldPC_Id as nvarchar) +
		'_22063' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_Id,
		HoldPC as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_Name,
		'ASSET.HOLD.PERCENTAGE' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_Code,
		HoldPC as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_Options_Id,
		HoldPC as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_Options_Value,
		'ASSET.HOLD.PERCENTAGE.VALUE' as Component_ComponentValues_CC_CC_CC_CC_CC_CC_Options_Code,

		----MaxBet----
		cast(MaxBet_Id as nvarchar) +
		'_22065' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Id,
		MaxBet as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Name,
		'ASSET.USER.CUSTOM.1' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Code,
		MaxBet as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Options_Id,
		MaxBet as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Options_Value,
		'ASSET.USER.CUSTOM.1.VALUE' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_Options_Code,

		----LineConfiguration----
		cast(LineConfiguration_Id as nvarchar) +
		'_22066' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Id,
		LineConfiguration as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Name,
		'ASSET.USER.CUSTOM.3' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Code,
		LineConfiguration as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Options_Id,
		LineConfiguration as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Options_Value,
		'ASSET.USER.CUSTOM.3.VALUE' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_Options_Code,

		----GameCategory----
		cast(GameCategory_Id as nvarchar) +
		'_22067' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Id,
		case when GameCategory = '' then 'Core' else GameCategory end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Name,
		'ASSET.USER.CUSTOM.4' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Code,
		case when GameCategory = '' then 'Core' else GameCategory end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_DisplayName,
		----Options---
		1 as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Options_Id,
		case when GameCategory = '' then 'Core' else GameCategory end as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Options_Value,
		'ASSET.USER.CUSTOM.4.VALUE' as Component_Components_ComponentValues_CC_CC_CC_CC_CC_CC_CC_CC_CC_Options_Code
		FROM MIGRATION.GAM_TYPE_DESCRIPTION AS TYP
		LEFT JOIN MIGRATION.VIEW_MANUFACTURE AS MNF ON MNF.display_name = TYP.MANUFACTURER 
		LEFT JOIN migration.VIEW_MODEL AS MDL ON MDL.DISPLAY_NAME = TYP.MODEL and mnf_seq = MDL_seq
		LEFT JOIN migration.VIEW_MODEL_TYPE AS MDLTYPE ON MDLTYPE.DISPLAY_NAME = TYP.ModelType and mnf_seq = MDL_TYP_SEQ
		--where Id between 2 and 150
    </Source>
    <Destination>[Components].[ComponentData]</Destination>
    <KeyFormat Format="57_{0}" Keys="Id"  />
	<ColumnMapping>
      <ColumnMap Key="CC" ColumnName="ChildComponents"/>
    </ColumnMapping>
  </Transformation>
  <Transformation Name="AST_DEFN">
    <Source>
      SELECT AST.ASST_ID as Id,
      CONVERT(varchar(100),ASTDFN_OPTN_ORDER) as Sequences,
      CONVERT(bit,'true') as IsSystemDefined,
      --------Asset Type -----
      AST.ASST_ID as AssetType_Id,
      AST.ASST_NAME as AssetType_Name,
      Ast.ASST_DESCRIPTION as AssetType_Description,
      CONVERT(bit,'true') as AssetType_IsRevenueAffecting,
      CONVERT(bit,'false') as AssetType_IsInline,
      'Root' as AssetType_Scope,
      --------Options--------
      optn.OPTN_ID as Options_Id,
      optn.OPTN_NAME as Options_Name,
      optn.OPTN_CODE as Options_Code,
      optn.OPTN_DESCRIPTION as Options_Description,
      optn.OPTN_DEFAULT_VAL as Options_DefaultValue,
      optn.OPTN_MIN_VALUE as Options_MinLength,
      optn.OPTN_MAX_VALUE as Options_MaxLength,
      optn.OPTN_EDIT_ENABLED as Options_IsEditEnabled,
      optn.OPTN_ADD_ENABLED as Options_IsAddEnabled,
      optn.OPTN_MOVE_ENABLED as Options_IsMoveEnabled,
      optn.OPTN_MOVE_EDIT_ENABLED as Options_IsMoveEditEnabled,
      optn.OPTN_DELETE_ENABLED as Options_IsDeleteEnabled,
      --optn.OPTN_DELETE_ENABLED as Options_IsDeleteEnabled,
      CONVERT(bit,'true') as Options_IsSearchable
      FROM GAM.ASSET AS AST
      LEFT JOIN GAM.ASSET_DEFINITION AS AST_DFN ON AST.ASST_ID = AST_DFN.ASTDFN_ASST_ID
      LEFT JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID = AST_DFN.ASTDFN_OPTN_ID
      --LEFT JOIN GAM.OPTION_ENUMERATION AS ENUM ON OPTN.OPTN_ID=ENUM.OPTEN_OPTN_ID
      --WHERE AST.ASST_ID = 1
    </Source>
    <Destination>ASSET_DEF.ASSETS</Destination>
    <KeyFormat Format="53_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="AST">
    <Source>
      SELECT MG.ASD_STD_NEW_ID as  Id,
	    0 as DataRowVersion,
      ---ASSET ID -----
      MG.ASD_STD_NEW_ID as AssetId_Id,
      CASE WHEN AST.ASST_ID = 1 THEN 10
      WHEN AST.ASST_ID = 2 THEN 3
      WHEN AST.ASST_ID = 3 THEN 4
      WHEN AST.ASST_ID = 4 THEN 8
      WHEN AST.ASST_ID = 5 THEN 7
      WHEN AST.ASST_ID = 6 THEN 9
      WHEN AST.ASST_ID = 7 THEN 15
      WHEN AST.ASST_ID = 8 THEN 2
      WHEN AST.ASST_ID = 9 THEN 13
      WHEN AST.ASST_ID = 10 THEN 14
      WHEN AST.ASST_ID = 11 THEN 12
      WHEN AST.ASST_ID = 12 THEN 6
      WHEN AST.ASST_ID = 13 THEN 5
      WHEN AST.ASST_ID = 14 THEN 1
      END as AssetId_AssetTypeDefinitionId,
      ----SITE----------
      SITE_NUMBER as Site_SiteId,
      SITE_LONG_NAME as Site_SiteName,
      SITE_NUMBER as Site_SiteNumber,
      st.IS_DELETED as Site_IsDeleted,
      0 as Site_OrganizationId, -- mapping needed
      pt.prop_long_name as Site_OrganizationName,
      ---- OPTIONS ----------
      case when ogrp_id = 1 then OPTN.OPTN_ID else null end as Options_Id,
      case when ogrp_id = 1 then OPTN.OPTN_CODE else null end as Options_Code,
      case when ogrp_id = 1 then (CASE WHEN AST_OPTN_VALUE = 'FLAG.NO' then 'No'
			WHEN AST_OPTN_VALUE = 'FLAG.BAL' then 'Balance'
			WHEN AST_OPTN_VALUE = 'FLAG.YES' then 'Yes' 
			WHEN AST_OPTN_VALUE = 'CONTROLLER.TYPE.THIRDPARTY' then 'Third Party'
			WHEN AST_OPTN_VALUE = 'KIOSK.TYPE.K' THEN 'K'
			when AST_OPTN_VALUE = 'CONTROLLER.TYPE.STANDALONE' then 'Standalone'
	  ELSE AST_OPTN_VALUE end) else null end as Options_Value,

      -----Components --------
	  CASE WHEN OGRP_ID > 1 THEN
		(CASE WHEN OPTN.OPTN_ID IN (122) THEN '22002' ELSE NULL END) ELSE NULL END AS Components_ComponentId,
	  CASE WHEN OGRP_ID > 1 THEN UPPER(OPTN.OPTN_NAME) ELSE NULL END AS Components_ComponentInstanceId,
	  CASE WHEN OGRP_ID > 1 THEN OPTN.OPTN_NAME ELSE NULL END AS Components_ComponentName,
	  CASE WHEN OGRP_ID > 1 THEN UPPER(OPTN.OPTN_NAME) ELSE NULL END AS Components_ComponentCode,

	  CASE WHEN OGRP_ID > 1 THEN 
		(CASE WHEN OPTN.OPTN_ID IN (122) THEN '0_'+ CAST(MF_NEW_ID AS NVARCHAR) + '_1' ELSE NULL END) ELSE NULL END AS Components_ComponentKey,

	  case when ogrp_id > 1 then
      ( case ogrp_id
      when 90023 then  mdl.mdl_long_name
      when 90011 then  ar.ar_long_name
      when 90012 then  zn.zn_long_name
      when 90013 then  bk.bk_long_name/*Bank*/
      when 90041 then  cast(contract_no as nvarchar)/*Contract*/
      when 90051 then  cast(mdt_number as nvarchar)/*Meter Delta*/
      when 90021 then  MANF_LONG_NAME
      when 90014 then  COL_LONG_NAME
      when 90023 then  MDLTYP_LONG_NAME end)  else null end as Components_ComponentValue,



      ------Type Code -----
      TCODE.TYCOD_NUMBER as TypeCode_TypeCodeId, -- mapping needed
      TCODE.TYCOD_NAME as TypeCode_TypeCodeName
      FROM GAM.ASSET_STANDARD_DETAILS AS ASD
      JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS MG on MG.ASD_STD_LEGACY_ID=ASD.ASD_STD_ID
      JOIN GAM.ASSET AS AST ON AST.ASST_ID = ASD.ASD_ASST_ID
      JOIN GAM.INSTALLED_SYSTEM_MAP AS MAP ON MAP.INSM_ID = ASD.ASD_INSMAP_ID
      JOIN GAM.[SITE] AS ST ON ST.SITE_ID = MAP.INSM_SITE_ID
      JOIN GAM.PROPERTY AS pt ON pt.PROP_ID = ST.SITE_PROP_ID
      JOIN GAM.ASSET_DETAIL AS AD ON AD.ASD_STD_ID = ASD.ASD_STD_ID
      JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID = AD.AST_OPTION_ID
      LEFT JOIN GAM.MANUFACTURER  AS MNF ON MNF.MANF_ID = ASD.ASD_MANF_ID
	    LEFT JOIN MIGRATION.GAM_MANUFACTURER AS GMNF ON GMNF.[MNF_LEGCY_ID] = ASD.ASD_MANF_ID
      LEFT JOIN GAM.MODEL AS MDL ON MDL.MDL_ID = ASD.ASD_MODL_ID
      LEFT JOIN GAM.MODEL_MODELTYPE_MAP AS MDL_TYPE_MAP ON MDL_TYPE_MAP.[MODEL_MAP_ID] = ASD.ASD_MODL_TYP_MAPiD
      LEFT JOIN GAM.AREA AS AR ON AR.AREA_ID = ASD.ASD_AREA_ID
      LEFT JOIN GAM.ZONE AS ZN ON ZN.ZONE_ID = ASD.ASD_ZONE_ID
      LEFT JOIN GAM.BANK AS BK ON BK.BANK_ID = ASD.ASD_BANK_ID
      LEFT JOIN GAM.METER_DELTA AS MTR_DELTA ON MTR_DELTA.MDT_ID = ASD.ASD_MTR_DLTA_ID
      LEFT JOIN [GAM].[TYPE_CODE_MASTER] AS TCODE ON TCODE.TYCOD_ID = ASD.ASD_TCOD_ID
      LEFT JOIN [GAM].[CONTRACT_DETAILS] AS CNTRCT ON CNTRCT.CONTRACT_ID = ASD.ASD_CNTR_ID
      LEFT JOIN [GAM].[COLLECTION] AS COL ON COL.[COLLECTION_ID] = ASD.ASD_COLLECTION_ID
      LEFT JOIN [GAM].MODEL_TYPE AS MTYP ON COL.[COLLECTION_ID] = ASD.ASD_COLLECTION_ID
      WHERE ASD.IS_DELETED = 0 AND ASD_CLST_STAT_ID = 5
      AND AST.ASST_ID not in ( 1 )
      AND SITE_NUMBER in ({0})
    </Source>
    <Destination>[DataManagement].[Asset]</Destination>
    <KeyFormat Format="59_{0}_{1}" Keys="AssetId.AssetTypeDefinitionId,Id"  />
  </Transformation>
  <Transformation Name="AST_POS_ASSET">
    <Source>
		SELECT  
		-----Id--------
		ASD_STD_NEW_ID as Id,
		-----AssetId--------
		305 as AssetId_AssetTypeDefinitionId,
		ASD_STD_NEW_ID as AssetId_Id,
		-------Site-----
		ST.SITE_NUMBER as Site_SiteId,
		ST.SITE_LONG_NAME as Site_SiteName,
		ST.SITE_NUMBER as Site_SiteNumber,
		GPT.prop_new_id as Site_OrganizationId,
		PT.PROP_LONG_NAME as Site_OrganizationName,
		--AST.ASST_NAME, ASD.ASD_NUMBER as SlotNumber, ASD.ASD_AM_UID, 
		CASE when OPTN_CODE = 'ASSET.NUMBER' THEN 'AST.NON.SLOT.ID'
			   WHEN OPTN_CODE = 'ASSET.LOCATION' THEN 'AST.NON.TERMINAL.NAME' 
				WHEN OPTN_CODE = 'ASSET.SERIAL.NUMBER' THEN 'ASSET.SERIAL.NUMBER' 
				WHEN OPTN_CODE = 'ASSET.PROG.RATE' THEN 'POS.VERSION'
			   WHEN OPTN_CODE = 'ASSET.NJ.SEAL' THEN 'POS.FIRMWARE.VERSION' 
				WHEN OPTN_CODE = 'ASSET.ASL.POSITION' THEN 'AST.NON.TERMINAL.LOCATION' END AS Options_Code,

		CASE when OPTN_CODE = 'ASSET.NUMBER' THEN 1
			   WHEN OPTN_CODE = 'ASSET.LOCATION' THEN 6
			   WHEN OPTN_CODE = 'ASSET.SERIAL.NUMBER' THEN 5
			   WHEN OPTN_CODE = 'ASSET.PROG.RATE' THEN 2
			   WHEN OPTN_CODE = 'ASSET.NJ.SEAL' THEN 3
			   WHEN OPTN_CODE = 'ASSET.ASL.POSITION' THEN 7 END AS Options_Id,

		CASE when OPTN_CODE = 'ASSET.NUMBER' THEN ASD_NUMBER
			   WHEN OPTN_CODE = 'ASSET.LOCATION' THEN ASD_LOCATION
			   WHEN OPTN_CODE = 'ASSET.SERIAL.NUMBER' THEN ASD_SERIAL_NUM
			   WHEN OPTN_CODE = 'ASSET.PROG.RATE' THEN '1.0'
			   WHEN OPTN_CODE = 'ASSET.NJ.SEAL' THEN AST_OPTN_VALUE 
				WHEN OPTN_CODE = 'ASSET.ASL.POSITION' THEN ASD_LOCATION END as Options_Value,
		tycod_number as TypeCode_Id, tycod_name as TypeCode_Name,
		ComponentId as Components_ComponentId,
		ComponentName as Components_ComponentName,
		ComponentValue as Components_ComponentValue,
		ComponentKey as Components_ComponentKey,
		ComponentInstanceId as Components_ComponentInstanceId,
		ComponentCode as Components_ComponentCode
		--, OPTN.[OPTN_CODE] , ad.AST_OPTN_VALUE, ad.*
		FROM GAM.ASSET_STANDARD_DETAILS AS ASD
		JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS AS GSD ON ASD.ASD_STD_ID = GSD.ASD_STD_LEGACY_ID
		JOIN GAM.ASSET AS AST ON AST.ASST_ID = ASD.ASD_ASST_ID
		JOIN GAM.INSTALLED_SYSTEM_MAP AS MAP ON MAP.INSM_ID = ASD.ASD_INSMAP_ID
		JOIN GAM.[SITE] AS ST ON ST.SITE_ID = MAP.INSM_SITE_ID
		JOIN MIGRATION.GAM_SITE AS GST ON GST.[SITE_LEGCY_ID] = ST.SITE_ID
		JOIN GAM.PROPERTY AS PT ON PT.PROP_ID = ST.SITE_PROP_ID
		JOIN [MIGRATION].[GAM_PROPERTY] AS GPT ON GPT.[PROP_LEGCY_ID] = PT.PROP_ID
		JOIN GAM.MODEL AS MDL ON MDL.MDL_ID = ASD_MODL_ID
		LEFT JOIN GAM.ASSET_DETAIL AS AD ON AD.ASD_STD_ID = ASD.ASD_STD_ID
		left JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID  = ad.[AST_OPTION_ID]
		LEFT JOIN [MIGRATION].[ASSET_TYPE_DEFN] AS TOPTN ON TOPTN.[OPTION_CODE] = OPTN.[OPTN_CODE] and TOPTN.asset_code = AST.asst_name
		left join [GAM].[TYPE_CODE_MASTER] as tcm on tcm.tycod_id = [ASD_TCOD_ID]
		left join (select 101 as SeqId, 22002 as ComponentId, 'Manufacturer' as ComponentName, 'POS' as ComponentValue, '0_1_1' as ComponentKey, '220022' as ComponentInstanceId, '22002.1' as ComponentCode
		UNION ALL
		select 102 as SeqId, 22051 as ComponentId, 'POS Vendor' as ComponentName, 'POS' as ComponentValue, '0_1_22051' as ComponentKey, 'POSVENDOR' as ComponentInstanceId, 'POS.VENDOR' as ComponentCode
		UNION ALL
		select 103 as SeqId, 22052 as ComponentId, 'POS Model Attributes' as ComponentName, 'POS' as ComponentValue, '0_1_22052' as ComponentKey, 'POSMODEL' as ComponentInstanceId, 'POS.MODEL' as ComponentCode
		) as mas_comp on mas_comp.SeqId = AST_OPTION_ID
		WHERE ASD.IS_DELETED = 0 AND ASD.ASD_CLST_STAT_ID = 5
		AND ASD.ASD_ASST_ID = 1 AND MDL.MDL_SHORT_NAME in ('POS')
		AND ST.SITE_NUMBER in ( {0} )
		--and ASD.ASD_NUMBER = 97902
		AND AST_OPTION_ID IN (101,102,103,263,215,125)
		ORDER BY ASD_STD_NEW_ID, AST_OPTION_ID
    </Source>   
    <Destination>[DataManagement].[Asset]</Destination>
    <KeyFormat Format="59_{0}_{1}" Keys="AssetId.AssetTypeDefinitionId,Id"  />
  </Transformation>
  <Transformation Name="PROGRESSIVE">
    <Source>
      select mtr.POOL_NEW_ID  as Id,
	    0 as DataRowVersion,
      ---ASSET ID -----
      --1 as AssetId_Id,
      mtr.POOL_NEW_ID  as AssetId_Id,
      11 as AssetId_AssetTypeDefinitionId,
      ----SITE----------
      Site_SiteId,
      Site_SiteName,
      Site_SiteNumber,
      Site_IsDeleted,
      Site_OrganizationId, -- mapping needed
      Site_OrganizationName,
      -----
      Options_Id,
      Options_Name,
      Options_Code,
      Options_Value,

      -----InlineAssets----
      0 as InlineAssets_Id,
      213 as InlineAssets_AssetId_AssetTypeDefinitionId,
      0 as InlineAssets_AssetId_Id,
      -----Options------
      InlineAssets_Id as InlineAssets_Options_Id,
      InlineAssets_Name as InlineAssets_Options_Name,
      InlineAssets_Code as InlineAssets_Options_Code,
      InlineAssets as InlineAssets_Options_Value
      --select *
      from MIGRATION.VIEW_PROGRESSIVE_METERS as mtr
      left join MIGRATION.VIEW_POOL AS P on p.prgp_id = mtr.PRGP_ID and mtr.InlineAssets_Id = Options_Id
	  where Mtr_Deleted = 0 
	  and  Site_SiteNumber in ({0})
      order by mtr.PRGP_ID, mtr.InlineAssets_Id
    </Source>
    <Destination>[DataManagement].[Asset]</Destination>
    <KeyFormat Format="59_{0}_{1}" Keys="AssetId.AssetTypeDefinitionId,Id"  />
  </Transformation>
  <Transformation Name="TYPCODE">
    <Source>
      	SELECT TYCOD_Number as Id,
		0 as DataRowVersion,
		TYCOD_NAME as Name,
		TYCOD_DESC as [Desc],
		CAST(0 as VARCHAR(50)) as SelectedInlines,
		case when TYCOD_NAME like 'POS%' then 305 else 10 end as AssetTypeId,
		case when TYCOD_NAME like 'POS%' then 'POS' else 'Slot' end as Asset_Type,
		--------TypeCodeOption------
		---------Options------------
		[OPTION_ID] as TypeCodeOption_Options_OptionId,
		CASE WHEN [OPTION_ID] is NULL THEN NULL 
		ELSE 
			(CASE WHEN TYCV_OPTN_VALUE = 'FLAG.NO' then 'No'
			when TYCV_OPTN_VALUE = 'FLAG.BAL' then 'Balance'
			WHEN TYCV_OPTN_VALUE = 'FLAG.YES' then 'Yes' 
			when TYCV_OPTN_VALUE = 'ASSET.CASH.CLUB.ENAB.ENUM.NORMAL' then 'Normal'
			when TYCV_OPTN_VALUE = 'VALIDATION.SYSTEM' then 'System'
			else TYCV_OPTN_VALUE end) END as TypeCodeOption_Options_Value,
		---------ComponentOptions---------
		CASE WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.MASTER.MANUFACTURER' THEN 22002 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.HOLD.PERCENTAGE' THEN 22063 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.TYPE.DESCRIPTION' THEN 22069
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.DENOMINATION' THEN 220113
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.GMU.DENOM' THEN 220114
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.FILL.DENOM' THEN 220115
		ELSE null end as TypeCodeOption_ComponentOptions_ComponentId,

		CASE WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.MASTER.MANUFACTURER' THEN 'MANUFACTURER' 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.HOLD.PERCENTAGE' THEN 'ASSET.HOLD.PERCENTAGE' 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.TYPE.DESCRIPTION' THEN 'ASSET.TYPE.DESCRIPTION'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.DENOMINATION' THEN 'ASSET.DENOMINATION'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.GMU.DENOM' THEN 'ASSET.GMU.DENOM'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.FILL.DENOM' THEN 'ASSET.FILL.DENOM'
		ELSE null end as TypeCodeOption_ComponentOptions_ComponentCode,

		CASE WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.MASTER.MANUFACTURER' THEN 'Manufacturer' 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.HOLD.PERCENTAGE' THEN 'Hold Percentage' 
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.TYPE.DESCRIPTION' THEN 'Type Description'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.DENOMINATION' THEN 'Denomination'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.GMU.DENOM' THEN 'GMU Denom'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.FILL.DENOM' THEN 'Fill Denom'
		ELSE null end as TypeCodeOption_ComponentOptions_Instance,

		CASE WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.MASTER.MANUFACTURER' THEN cast(GMNF.MF_NEW_ID as nvarchar)+'_1'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.HOLD.PERCENTAGE' THEN TYCV_OPTN_VALUE
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.TYPE.DESCRIPTION' THEN TYCV_OPTN_VALUE
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.DENOMINATION' THEN cast(GDN.Components_Id as nvarchar)+'_1'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.GMU.DENOM' THEN cast(GDN.Components_Id as nvarchar)+'_1'
		WHEN [OPTION_ID] is null and OPTN_CODE = 'ASSET.FILL.DENOM' THEN cast(GDN.Components_Id as nvarchar)+'_1'
		ELSE null end as TypeCodeOption_ComponentOptions_Value

		----------InlineOptions-----------
		--Game
		--select  typ.TypeDescription ,  TYCV_OPTN_VALUE, * 
		FROM GAM.TYPE_CODE_MASTER AS MS
		JOIN GAM.TYPE_CODE_VALUES AS VAL ON VAL.[TYCV_TYCOD_ID] = MS.TYCOD_ID
		JOIN GAM.[OPTION] AS OPTN ON OPTN.OPTN_ID  = TYCV_OPTN_ID
		LEFT JOIN [MIGRATION].[ASSET_TYPE_DEFN] AS TOPTN ON TOPTN.[OPTION_CODE] = OPTN.[OPTN_CODE]
		LEFT JOIN MIGRATION.GAM_DENOMINATION AS GDN ON GDN.DENM_AMOUNT = TYCV_OPTN_VALUE
		LEFT JOIN GAM.MANUFACTURER AS MNF ON MNF.MANF_LONG_NAME = TYCV_OPTN_VALUE
		LEFT JOIN [MIGRATION].[GAM_MANUFACTURER] AS GMNF ON GMNF.MNF_LEGCY_ID = MNF.MANF_ID
		left join migration.GAM_TYPE_DESCRIPTION as typ on upper(typ.TypeDescription) = upper(TYCV_OPTN_VALUE)
		where ms.[TYCOD_TYPE] = 2
		order by  ms.[TYCOD_ID]

    </Source>
    <Destination>[DataManagement].[TypeCode]</Destination>
    <KeyFormat Format="56_{0}" Keys="Id"  />
  </Transformation>
  <Transformation Name="AST_SLOT">
    <Source>
     SELECT
      Id,
	    0 as DataRowVersion,
      ---ASSET ID -----
      AssetId_Id,
      AssetId_AssetTypeDefinitionId,
      ---------SITE----------
      Site_SiteId,
      Site_SiteName,
      Site_SiteNumber,
      Site_OrganizationId,
      Site_OrganizationName,
      --------- OPTIONS ----------
      Options_Id,
      Options_Code,
      Options_Value,
      --------Components --------
      Components_ComponentId,
      Components_ComponentInstanceId,
      Components_ComponentName,
      Components_ComponentKey,
      Components_ComponentValue,
      Components_ComponentCode,
      ------------InlineAssets------------
      InlineAssets_Id,
      InlineAssets_AssetId_AssetTypeDefinitionId,
      InlineAssets_AssetId_Id,
      InlineAssets_Components_ComponentId,
      InlineAssets_Components_ComponentName,
      InlineAssets_Components_ComponentValue,
      InlineAssets_Components_ComponentKey,
      InlineAssets_Components_ComponentInstanceId,
      InlineAssets_Components_ComponentCode,
      InlineAssets_Options_Id,
      InlineAssets_Options_Value,
      InlineAssets_Options_Code,
      --------TypeCode--------
      TypeCode_TypeCodeId,
      TypeCode_TypeCodeName
	from migration.Datamanagement_asset_data
	--where Site_SiteNumber = 201
	ORDER BY ID, Asset_optn_val_seqId, asset_comp_seqId, Inline_asset_seqId
    </Source>
    <Destination>[DataManagement].[Asset]</Destination>
    <KeyFormat Format="59_{0}_{1}" Keys="AssetId.AssetTypeDefinitionId,Id"  />
  </Transformation>
  <Transformation Name="LINK_SLOT2POOL">
    <Source>
    SELECT 
    --'59_10_'+cast(MSLOT.[ASD_STD_NEW_ID] as nvarchar) as [Key],
    ------Id---------
    MSLOT.[ASD_STD_NEW_ID] as AssetId,
    10 as Id_AssetTypeDefinitionId,
    MSLOT.[ASD_STD_NEW_ID] as Id_Id,
    -------ActiveAssetLink-------
    11 as ActiveAssetLink_AssetTypeDefinitionId,
    MPOOL.[POOL_NEW_ID] as ActiveAssetLink_Id,
    0 as DataRowVersion
    --row_number() over (partition by [ASD_STD_NEW_ID] order by [ASD_STD_NEW_ID]) as rNumber
    FROM [PROGRESSIVE].[SLOT_POOL_MAPPING] AS PM 
    JOIN [PROGRESSIVE].[SLOT] AS SLT ON SLT.SLOT_ID = PM.SLOT_ID
    JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS AS MSLOT ON MSLOT.ASD_STD_LEGACY_ID = SLT.ASD_STD_ID
    JOIN GAM.ASSET_STANDARD_DETAILS AS ONLNE ON ONLNE.ASD_STD_ID = MSLOT.ASD_STD_LEGACY_ID
    JOIN GAM.ASSET AS AST ON AST.ASST_ID = ONLNE.ASD_ASST_ID
    JOIN MIGRATION.PROGRESSIVE_POOL AS MPOOL ON MPOOL.[POOL_LEGCY_ID] = PRGP_ID
	JOIN GAM.INSTALLED_SYSTEM_MAP AS ISM ON ISM.INSM_ID = ONLNE.ASD_INSMAP_ID
	JOIN GAM.SITE AS ST ON ST.SITE_ID = ISM.INSM_SITE_ID
    WHERE PM.[IS_DELETED] = 0 AND ISNULL(ASST_ANCESTOR_ID, ASST_ID)=1
	AND SITE_NUMBER in ( {0} )
    ORDER BY MSLOT.[ASD_STD_NEW_ID], [POOL_NEW_ID]
    </Source>
    <Destination>[DataManagement].[AssetLink]</Destination>
    <KeyFormat Format="59_10_{0}" Keys="Id.Id"  />
  </Transformation>
  <Transformation Name="LINK_POOL2SLOT">
    <Source>
    SELECT 
    --'59_11_'+CAST(PoolId as nvarchar) as [Key],
    ----Id--
    PoolId as AssetId,
    11 as Id_AssetTypeDefinitionId,
    PoolId as Id_Id,
    --ActiveAssetLink--
    AssetTypeId as ActiveAssetLink_AssetTypeDefinitionId,
    AssetId as ActiveAssetLink_Id,
    0 as DataRowVersion
    FROM ( 
    /* pool to slot */
    SELECT MPOOL.[POOL_NEW_ID] as PoolId,
    MSLOT.[ASD_STD_NEW_ID] as AssetId,
    --row_number() over (partition by [POOL_NEW_ID] order by [POOL_NEW_ID]) as rNumber,
    10 as AssetTypeId, SITE_NUMBER
    FROM [PROGRESSIVE].[SLOT_POOL_MAPPING] AS PM 
    JOIN [PROGRESSIVE].[SLOT] AS SLT ON SLT.SLOT_ID = PM.SLOT_ID
    JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS AS MSLOT ON MSLOT.ASD_STD_LEGACY_ID = SLT.ASD_STD_ID
    JOIN GAM.ASSET_STANDARD_DETAILS AS ONLNE ON ONLNE.ASD_STD_ID = MSLOT.ASD_STD_LEGACY_ID
    JOIN GAM.ASSET AS AST ON AST.ASST_ID = ONLNE.ASD_ASST_ID
    JOIN MIGRATION.PROGRESSIVE_POOL AS MPOOL ON MPOOL.[POOL_LEGCY_ID] = PRGP_ID
	JOIN GAM.INSTALLED_SYSTEM_MAP AS ISM ON ISM.INSM_ID = ONLNE.ASD_INSMAP_ID
	JOIN GAM.SITE as st on st.site_id = ism.INSM_SITE_ID
    WHERE PM.[IS_DELETED] = 0 AND ISNULL(ASST_ANCESTOR_ID, ASST_ID)=1
    UNION ALL
    /*pool to controller*/
    SELECT MPOOL.[POOL_NEW_ID] as PoolId,
    MSLOT.[ASD_STD_NEW_ID] as AssetId,
    --row_number() over (partition by [POOL_NEW_ID] order by [POOL_NEW_ID]) as rNumber,
    15 as AssetTypeId, SITE_NUMBER
    FROM [PROGRESSIVE].[pool] as p
    JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS AS MSLOT ON MSLOT.ASD_STD_LEGACY_ID = p.PCON_ID
    JOIN GAM.ASSET_STANDARD_DETAILS AS ONLNE ON ONLNE.ASD_STD_ID = MSLOT.ASD_STD_LEGACY_ID
    JOIN GAM.ASSET AS AST ON AST.ASST_ID = ONLNE.ASD_ASST_ID
    JOIN MIGRATION.PROGRESSIVE_POOL AS MPOOL ON MPOOL.[POOL_LEGCY_ID] = PRGP_ID
	JOIN GAM.INSTALLED_SYSTEM_MAP AS ISM ON ISM.INSM_ID = ONLNE.ASD_INSMAP_ID
	JOIN GAM.SITE as st on st.site_id = ism.INSM_SITE_ID
    WHERE p.[IS_DELETED] = 0  ) as vrAll
	WHERE SITE_NUMBER in ( {0} )
    ORDER BY PoolId
    </Source>
    <Destination>[DataManagement].[AssetLink]</Destination>
    <KeyFormat Format="59_11_{0}" Keys="Id.Id"  />
  </Transformation>
  <Transformation Name="LINK_CNTRL2POOL">
    <Source>
     --Controller[15] to Pool[11]
    SELECT 
    --'59_15_'+cast([ASD_STD_NEW_ID] as nvarchar) as [Key],
    --Id--
    [ASD_STD_NEW_ID] as AssetId,
    15 as Id_AssetTypeDefinitionId,
    [ASD_STD_NEW_ID] as Id_Id,
    --ActiveAssetLink--
    11 as ActiveAssetLink_AssetTypeDefinitionId,
    [POOL_NEW_ID] as ActiveAssetLink_Id,
    0 as DataRowVersion
    --row_number() over (partition by [POOL_NEW_ID] order by [POOL_NEW_ID]) as rNumber
    FROM [PROGRESSIVE].[pool] as p
    JOIN MIGRATION.GAM_ASSET_STANDARD_DETAILS AS MSLOT ON MSLOT.ASD_STD_LEGACY_ID = p.PCON_ID
    JOIN GAM.ASSET_STANDARD_DETAILS AS ONLNE ON ONLNE.ASD_STD_ID = MSLOT.ASD_STD_LEGACY_ID
    JOIN GAM.ASSET AS AST ON AST.ASST_ID = ONLNE.ASD_ASST_ID
    JOIN MIGRATION.PROGRESSIVE_POOL AS MPOOL ON MPOOL.[POOL_LEGCY_ID] = PRGP_ID
	JOIN GAM.INSTALLED_SYSTEM_MAP AS ISM ON ISM.INSM_ID = ONLNE.ASD_INSMAP_ID
	JOIN GAM.SITE AS ST ON ST.SITE_ID = ISM.INSM_SITE_ID
    WHERE p.[IS_DELETED] = 0 
	AND SITE_NUMBER in ( {0} )
    ORDER BY MSLOT.[ASD_STD_NEW_ID]
    </Source>
    <Destination>[DataManagement].[AssetLink]</Destination>
    <KeyFormat Format="59_15_{0}" Keys="Id.Id"  />
  </Transformation>

  <!-- Report Components -->

  <Transformation Name="RPT_ORG">
    <Source> SELECT [key],[value] from Organization.Organization </Source>
    <Destination>Organization.Organization</Destination>
  </Transformation>
  <Transformation Name="RPT_SITE">
    <Source> SELECT [key],[value] from Site.Site </Source>
    <Destination>Site.Site</Destination>
  </Transformation>
  <Transformation Name="RPT_TSKGRP">
    <Source> SELECT [key],[value] from Employee.TaskGroup </Source>
    <Destination>[Employee].[TaskGroup]</Destination>
  </Transformation>
  <Transformation Name="RPT_ROLE">
    <Source> SELECT [key],[value] from Employee.Role </Source>
    <Destination>Employee.Role</Destination>
  </Transformation>
  <Transformation Name="RPT_COMPDATA">
    <Source> SELECT [key],[value] from COMPONENTS.ComponentData </Source>
    <Destination>COMPONENTS.ComponentData</Destination>
  </Transformation>
  <Transformation Name="RPT_ASSET">
    <Source> SELECT [key],[value] from DataManagement.Asset </Source>
    <Destination>DataManagement.Asset</Destination>
  </Transformation>
  <Transformation Name="RPT_ASTLINK">
    <Source> SELECT [key],[value] from DataManagement.AssetLink </Source>
    <Destination>DataManagement.AssetLink</Destination>
  </Transformation>
  
  <!-- History Components -->

  <Transformation Name="AST_HISTORY">
    <Source>
     EXEC MIGRATION.P_ASSET_SLOT_HISTORY {0}

      --Query
		
		SELECT
      ------ Id -------
      Asst_Histry_Id as Id,
      SMY.[Action] as [Action],
      clst_name as MasterListName,
      clst_name as ChangeListName,
      SMY.astl_data_source  as DataTriggerSource,
      ------- CreatedBy-------
      0 as CreatedBy_UserId,
      SMY.created_user as CreatedBy_LoginName,
      SMY.created_user as CreatedBy_FirstName,
      SMY.created_user as CreatedBy_MiddleName,
      SMY.created_user as CreatedBy_LastName,
      --------ApprovedBy--------
      0 as ApprovedBy_UserId,
      SMY.CLST_AUTH_USER as ApprovedBy_LoginName,
      SMY.CLST_AUTH_USER as ApprovedBy_FirstName,
      SMY.CLST_AUTH_USER as ApprovedBy_MiddleName,
      SMY.CLST_AUTH_USER as ApprovedBy_LastName,

      cast(SMY.clst_exectued_date as Varchar(50)) as ExecutedAt,
      -----Asset----
      10 as Asset_AssetTypeDefinitionId,
      asset_type as Asset_AssetType,
      10 as Asset_Id,

      ----Site---
      SMY.SiteId as Site_SiteId,
      SOURCE_SITE as Site_SiteName,
      SMY.SiteNumber as Site_SiteNumber,
      SMY.Site_OrganizationId as Site_OrganizationId,
      SMY.Site_OrganizationName as Site_OrganizationName,
      ----- OPTIONS --------
      P_ASD_OPTN_VALUE as Options,
      --OPTN.IS_UPDATED,

      -----ChangedOptions----
      CASE WHEN OPTN.IS_UPDATED = 1 THEN OPTION_ORDER ELSE NULL END AS ChangedOptions_Id,
      CASE WHEN OPTN.IS_UPDATED = 1 THEN OPTN.OPTN_CODE ELSE NULL END AS ChangedOptions_Name,
      CASE WHEN OPTN.IS_UPDATED = 1 THEN OPTN.OLD_VALUE ELSE NULL END AS ChangedOptions_Value_OldValue,
      CASE WHEN OPTN.IS_UPDATED = 1 THEN OPTN.CURRENT_VALUE ELSE NULL END AS ChangedOptions_Value_NewValue,
      CASE WHEN OPTN.IS_UPDATED = 1 THEN OPTN.OPTN_CODE ELSE NULL END AS ChangedOptions_Code,

      -----------InlineAssets-------
      ------ Asset ------
      260 as InlineAssets_Asset_AssetTypeDefinitionId,
      'Game' as InlineAssets_Asset_AssetType,
      0 as InlineAssets_Asset_Id,
      -------Options------
      P_GM_VALUE AS InlineAssets_Options,

      -----Games Changed Options---
      CASE WHEN isnull(C_G.GmOptionValue,'no_data') = isnull(O_G.GmOptionValue,'no_data')
      THEN NULL ELSE isnull(C_G.Seq, O_G.Seq) END AS InlineAssets_ChangedOptions_Id,

      CASE WHEN isnull(C_G.GmOptionValue,'no_data') = isnull(O_G.GmOptionValue,'no_data')
      THEN NULL ELSE isnull(C_G.GmOptionName, O_G.GmOptionName) END AS InlineAssets_ChangedOptions_Name,

      CASE WHEN isnull(C_G.GmOptionValue,'no_data') = isnull(O_G.GmOptionValue,'no_data')
      THEN NULL ELSE O_G.GmOptionValue END AS InlineAssets_ChangedOptions_Value_OldValue,

      CASE WHEN isnull(C_G.GmOptionValue,'no_data') = isnull(O_G.GmOptionValue,'no_data')
      THEN NULL ELSE C_G.GmOptionValue END AS InlineAssets_ChangedOptions_Value_NewValue,

      CASE WHEN isnull(C_G.Code,'no_data') = isnull(O_G.Code,'no_data')
      THEN NULL ELSE isnull(C_G.Code, O_G.Code)  END AS InlineAssets_ChangedOptions_Code,

      ----LinkedAssets--Progressive---
      ---- i.ActiveLinks
      11 as LinkedAssets_ActiveLinks_AssetTypeDefinitionId,
      'Progressive Pool' as LinkedAssets_ActiveLinks_AssetType,
      0 as LinkedAssets_ActiveLinks_Id,
      'Pool Id' as LinkedAssets_ActiveLinks_DisplayName,
      [PoolName_Current] as LinkedAssets_ActiveLinks_DisplayValue,
      --- ii.ChangedLinkes
		-----Linked
		    11 as LinkedAssets_ChangedLinkes_Linked_AssetTypeDefinitionId,
			'Progressive Pool' as LinkedAssets_ChangedLinkes_Linked_AssetType,
			0 as LinkedAssets_ChangedLinkes_Linked_Id,
			'Pool Id' as LinkedAssets_ChangedLinkes_Linked_DisplayName,
			[PoolName_Current] as LinkedAssets_ChangedLinkes_Linked_DisplayValue,
		-----DeLinked
			11 as LinkedAssets_ChangedLinkes_DeLinked_AssetTypeDefinitionId,
			'Progressive Pool' as LinkedAssets_ChangedLinkes_DeLinked_AssetType,
			0 as LinkedAssets_ChangedLinkes_DeLinked_Id,
			'Pool Id' as LinkedAssets_ChangedLinkes_DeLinked_DisplayName,
			PoolName_Old as LinkedAssets_ChangedLinkes_DeLinked_DisplayValue,

      cast(0 as bit) as IsLastest

      --GMS.[Current_GameComboName],
      --gms.[Current_Game_Id],
      --GMS.[Old_GameComboName],
      --[Old_Game_Id],
      --[PoolName_Old],
      --[PoolName_Current],
      --PoolId_Old,
      --PoolId_Current,
      --SMY.current_id,
      --SMY.pre_id,
      --OPTION_ORDER
      FROM MIGRATION.GAM_ASSET_SLOT_HISTORY_SUMMARY AS SMY --WHERE SMY.ASD_NUMBER = '180'
      LEFT JOIN MIGRATION.GAM_ASSET_SLOT_HISTORY_OPTIONS AS OPTN ON OPTN.CLST_ASD_ID = SMY.CLST_DET_ID
      LEFT JOIN MIGRATION.GAM_ASSET_SLOT_OPTIONS_VALUE AS OTP_VAL ON P_ASD_ID = smy.CURRENT_ID
      FULL JOIN MIGRATION.GAM_HISTORY_SLOT_GAMES_MAPPING AS C_G ON smy.current_id = C_G.gm_asd_std_id
      FULL JOIN MIGRATION.GAM_HISTORY_SLOT_GAMES_MAPPING AS O_G ON smy.Pre_Id = O_G.gm_asd_std_id
	  LEFT JOIN MIGRATION.GAM_ASSET_GAMES_OPTIONS_VALUE AS GM ON GM.P_GM_ID = C_G.Game_Id
      LEFT JOIN MIGRATION.GAM_ASSET_SLOT_HISTORY_PROGRESSIVE AS PROG ON PROG.CLST_DET_ID = SMY.CLST_DET_ID
      WHERE 1=1
      and Asst_Histry_Id is not null
      --and SMY.ASD_AM_UID =1828
	  and SMY.SiteNumber in ({0})
	  --and SMY.SiteNumber in (301, 302, 401, 404, 501, 502, 201, 202, 801, 802, 683, 601)
      ORDER BY SMY.CLST_EXECTUED_DATE, SMY.CURRENT_ID, OPTION_ORDER

    </Source>
    <Destination>[Asset_History].[AssetsHistory]</Destination>
    <KeyFormat Format="68_{0}" Keys="Id"  />
  </Transformation>
  
</TransformationConfig>